/*
 * @author Mário Soares
 * @contributors Jefferson González
 * @contributors René Vögeli / Rangee GmbH
 * 
 * @license 
 * This file is part of wxPHP check the LICENSE file for information.
 * 
 * @note
 * This file was auto-generated by the wxPHP source maker
*/

#ifndef WXPHP_DC_H_GUARD
#define WXPHP_DC_H_GUARD

#include "references.h"
#include "object_types.h"
#include "arginfo_void.h"

ZEND_BEGIN_ARG_INFO_EX(wxphp_dc_get_args, 0, 0, 1)
    ZEND_ARG_INFO(0, name)
ZEND_END_ARG_INFO()

extern zend_class_entry* php_wxDC_entry;
extern zend_object_handlers wxphp_wxDC_object_handlers;
void php_wxDC_destruction_handler(zend_resource*);

class wxDC_php: public wxDC{
    public:

    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxDC{
    wxDC_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxDC;

void php_wxDC_free(void *object);
zend_object* php_wxDC_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxDC_functions[] = {
    PHP_ME(php_wxDC, StartPage, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, StartDoc, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, SetUserScale, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, SetTextForeground, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, SetTextBackground, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, CalcBoundingBox, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, CanUseTransformMatrix, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, Clear, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, CopyAttributes, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, CrossHair, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, DestroyClippingRegion, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, DeviceToLogicalX, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, DeviceToLogicalXRel, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, DeviceToLogicalY, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, DeviceToLogicalYRel, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, DrawArc, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, DrawBitmap, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, DrawCheckMark, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, DrawCircle, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, DrawEllipse, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, DrawEllipticArc, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, DrawIcon, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, DrawLabel, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, DrawLine, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, DrawPoint, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, DrawRectangle, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, DrawRotatedText, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, DrawRoundedRectangle, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, DrawSpline, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, DrawText, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, EndDoc, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, EndPage, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, FloodFill, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, GetBackground, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, GetBackgroundMode, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, GetBrush, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, GetCharHeight, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, GetCharWidth, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, GetClippingBox, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, GetDepth, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, GetDeviceOrigin, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, GetFont, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, GetLayoutDirection, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, GetLogicalFunction, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, GetLogicalOrigin, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, GetLogicalScale, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, GetMapMode, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, GetMultiLineTextExtent, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, GetPPI, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, GetPen, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, GetPixel, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, GetSize, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, GetSizeMM, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, GetTextBackground, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, GetTextExtent, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, GetTextForeground, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, GetUserScale, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, GradientFillConcentric, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, GradientFillLinear, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, IsOk, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, LogicalToDeviceX, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, LogicalToDeviceY, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, LogicalToDeviceXRel, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, LogicalToDeviceYRel, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, MaxX, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, MaxY, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, MinX, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, MinY, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, ResetBoundingBox, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, ResetTransformMatrix, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, SetAxisOrientation, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, SetBackground, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, SetBackgroundMode, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, SetBrush, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, SetClippingRegion, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, SetDeviceClippingRegion, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, SetDeviceOrigin, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, SetFont, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, SetLayoutDirection, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, SetLogicalFunction, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, SetLogicalOrigin, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, SetLogicalScale, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, SetMapMode, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, SetPalette, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, SetPen, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, StretchBlit, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDC, Blit, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_FE_END
};
#endif


static inline zo_wxDC * php_wxDC_fetch_object(zend_object *obj) {
    return (zo_wxDC *)(
        (char *)(obj) - XtOffsetOf(zo_wxDC, zo)
    );
}

#define Z_wxDC_P(zv) \
    php_wxDC_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxBufferedDC_entry;
extern zend_object_handlers wxphp_wxBufferedDC_object_handlers;
void php_wxBufferedDC_destruction_handler(zend_resource*);

class wxBufferedDC_php: public wxBufferedDC{
    public:

    wxBufferedDC_php():wxBufferedDC(){}
    wxBufferedDC_php(wxDC* dc, const wxSize& area, int style=wxBUFFER_CLIENT_AREA):wxBufferedDC(dc, area, style){}
    wxBufferedDC_php(wxDC* dc, wxBitmap& buffer=wxNullBitmap, int style=wxBUFFER_CLIENT_AREA):wxBufferedDC(dc, buffer, style){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxBufferedDC{
    wxBufferedDC_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxBufferedDC;

void php_wxBufferedDC_free(void *object);
zend_object* php_wxBufferedDC_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxBufferedDC_functions[] = {
    PHP_ME(php_wxBufferedDC, Init, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxBufferedDC, __construct, arginfo_void, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxBufferedDC * php_wxBufferedDC_fetch_object(zend_object *obj) {
    return (zo_wxBufferedDC *)(
        (char *)(obj) - XtOffsetOf(zo_wxBufferedDC, zo)
    );
}

#define Z_wxBufferedDC_P(zv) \
    php_wxBufferedDC_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxAutoBufferedPaintDC_entry;
extern zend_object_handlers wxphp_wxAutoBufferedPaintDC_object_handlers;
void php_wxAutoBufferedPaintDC_destruction_handler(zend_resource*);

class wxAutoBufferedPaintDC_php: public wxAutoBufferedPaintDC{
    public:

    wxAutoBufferedPaintDC_php(wxWindow* window):wxAutoBufferedPaintDC(window){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxAutoBufferedPaintDC{
    wxAutoBufferedPaintDC_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxAutoBufferedPaintDC;

void php_wxAutoBufferedPaintDC_free(void *object);
zend_object* php_wxAutoBufferedPaintDC_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxAutoBufferedPaintDC_functions[] = {
    PHP_ME(php_wxAutoBufferedPaintDC, __construct, arginfo_void, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxAutoBufferedPaintDC * php_wxAutoBufferedPaintDC_fetch_object(zend_object *obj) {
    return (zo_wxAutoBufferedPaintDC *)(
        (char *)(obj) - XtOffsetOf(zo_wxAutoBufferedPaintDC, zo)
    );
}

#define Z_wxAutoBufferedPaintDC_P(zv) \
    php_wxAutoBufferedPaintDC_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxBufferedPaintDC_entry;
extern zend_object_handlers wxphp_wxBufferedPaintDC_object_handlers;
void php_wxBufferedPaintDC_destruction_handler(zend_resource*);

class wxBufferedPaintDC_php: public wxBufferedPaintDC{
    public:

    wxBufferedPaintDC_php(wxWindow* window, wxBitmap& buffer, int style=wxBUFFER_CLIENT_AREA):wxBufferedPaintDC(window, buffer, style){}
    wxBufferedPaintDC_php(wxWindow* window, int style=wxBUFFER_CLIENT_AREA):wxBufferedPaintDC(window, style){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxBufferedPaintDC{
    wxBufferedPaintDC_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxBufferedPaintDC;

void php_wxBufferedPaintDC_free(void *object);
zend_object* php_wxBufferedPaintDC_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxBufferedPaintDC_functions[] = {
    PHP_ME(php_wxBufferedPaintDC, __construct, arginfo_void, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxBufferedPaintDC * php_wxBufferedPaintDC_fetch_object(zend_object *obj) {
    return (zo_wxBufferedPaintDC *)(
        (char *)(obj) - XtOffsetOf(zo_wxBufferedPaintDC, zo)
    );
}

#define Z_wxBufferedPaintDC_P(zv) \
    php_wxBufferedPaintDC_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxPaintDC_entry;
extern zend_object_handlers wxphp_wxPaintDC_object_handlers;
void php_wxPaintDC_destruction_handler(zend_resource*);

class wxPaintDC_php: public wxPaintDC{
    public:

    wxPaintDC_php(wxWindow* window):wxPaintDC(window){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxPaintDC{
    wxPaintDC_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxPaintDC;

void php_wxPaintDC_free(void *object);
zend_object* php_wxPaintDC_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxPaintDC_functions[] = {
    PHP_ME(php_wxPaintDC, __construct, arginfo_void, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxPaintDC * php_wxPaintDC_fetch_object(zend_object *obj) {
    return (zo_wxPaintDC *)(
        (char *)(obj) - XtOffsetOf(zo_wxPaintDC, zo)
    );
}

#define Z_wxPaintDC_P(zv) \
    php_wxPaintDC_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxClientDC_entry;
extern zend_object_handlers wxphp_wxClientDC_object_handlers;
void php_wxClientDC_destruction_handler(zend_resource*);

class wxClientDC_php: public wxClientDC{
    public:

    wxClientDC_php(wxWindow* window):wxClientDC(window){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxClientDC{
    wxClientDC_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxClientDC;

void php_wxClientDC_free(void *object);
zend_object* php_wxClientDC_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxClientDC_functions[] = {
    PHP_ME(php_wxClientDC, __construct, arginfo_void, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxClientDC * php_wxClientDC_fetch_object(zend_object *obj) {
    return (zo_wxClientDC *)(
        (char *)(obj) - XtOffsetOf(zo_wxClientDC, zo)
    );
}

#define Z_wxClientDC_P(zv) \
    php_wxClientDC_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxWindowDC_entry;
extern zend_object_handlers wxphp_wxWindowDC_object_handlers;
void php_wxWindowDC_destruction_handler(zend_resource*);

class wxWindowDC_php: public wxWindowDC{
    public:

    wxWindowDC_php(wxWindow* window):wxWindowDC(window){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxWindowDC{
    wxWindowDC_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxWindowDC;

void php_wxWindowDC_free(void *object);
zend_object* php_wxWindowDC_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxWindowDC_functions[] = {
    PHP_ME(php_wxWindowDC, __construct, arginfo_void, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxWindowDC * php_wxWindowDC_fetch_object(zend_object *obj) {
    return (zo_wxWindowDC *)(
        (char *)(obj) - XtOffsetOf(zo_wxWindowDC, zo)
    );
}

#define Z_wxWindowDC_P(zv) \
    php_wxWindowDC_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxMemoryDC_entry;
extern zend_object_handlers wxphp_wxMemoryDC_object_handlers;
void php_wxMemoryDC_destruction_handler(zend_resource*);

class wxMemoryDC_php: public wxMemoryDC{
    public:

    wxMemoryDC_php():wxMemoryDC(){}
    wxMemoryDC_php(wxDC* dc):wxMemoryDC(dc){}
    wxMemoryDC_php(wxBitmap& bitmap):wxMemoryDC(bitmap){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxMemoryDC{
    wxMemoryDC_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxMemoryDC;

void php_wxMemoryDC_free(void *object);
zend_object* php_wxMemoryDC_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxMemoryDC_functions[] = {
    PHP_ME(php_wxMemoryDC, SelectObject, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxMemoryDC, SelectObjectAsSource, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxMemoryDC, __construct, arginfo_void, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxMemoryDC * php_wxMemoryDC_fetch_object(zend_object *obj) {
    return (zo_wxMemoryDC *)(
        (char *)(obj) - XtOffsetOf(zo_wxMemoryDC, zo)
    );
}

#define Z_wxMemoryDC_P(zv) \
    php_wxMemoryDC_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxMirrorDC_entry;
extern zend_object_handlers wxphp_wxMirrorDC_object_handlers;
void php_wxMirrorDC_destruction_handler(zend_resource*);

class wxMirrorDC_php: public wxMirrorDC{
    public:

    wxMirrorDC_php(wxDC& dc, bool mirror):wxMirrorDC(dc, mirror){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxMirrorDC{
    wxMirrorDC_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxMirrorDC;

void php_wxMirrorDC_free(void *object);
zend_object* php_wxMirrorDC_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxMirrorDC_functions[] = {
    PHP_ME(php_wxMirrorDC, __construct, arginfo_void, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxMirrorDC * php_wxMirrorDC_fetch_object(zend_object *obj) {
    return (zo_wxMirrorDC *)(
        (char *)(obj) - XtOffsetOf(zo_wxMirrorDC, zo)
    );
}

#define Z_wxMirrorDC_P(zv) \
    php_wxMirrorDC_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxPostScriptDC_entry;
extern zend_object_handlers wxphp_wxPostScriptDC_object_handlers;
void php_wxPostScriptDC_destruction_handler(zend_resource*);

class wxPostScriptDC_php: public wxPostScriptDC{
    public:

    wxPostScriptDC_php():wxPostScriptDC(){}
    wxPostScriptDC_php(const wxPrintData& printData):wxPostScriptDC(printData){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxPostScriptDC{
    wxPostScriptDC_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxPostScriptDC;

void php_wxPostScriptDC_free(void *object);
zend_object* php_wxPostScriptDC_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxPostScriptDC_functions[] = {
    PHP_ME(php_wxPostScriptDC, __construct, arginfo_void, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxPostScriptDC * php_wxPostScriptDC_fetch_object(zend_object *obj) {
    return (zo_wxPostScriptDC *)(
        (char *)(obj) - XtOffsetOf(zo_wxPostScriptDC, zo)
    );
}

#define Z_wxPostScriptDC_P(zv) \
    php_wxPostScriptDC_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxScreenDC_entry;
extern zend_object_handlers wxphp_wxScreenDC_object_handlers;
void php_wxScreenDC_destruction_handler(zend_resource*);

class wxScreenDC_php: public wxScreenDC{
    public:

    wxScreenDC_php():wxScreenDC(){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxScreenDC{
    wxScreenDC_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxScreenDC;

void php_wxScreenDC_free(void *object);
zend_object* php_wxScreenDC_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxScreenDC_functions[] = {
    PHP_ME(php_wxScreenDC, EndDrawingOnTop, arginfo_void, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
    PHP_ME(php_wxScreenDC, StartDrawingOnTop, arginfo_void, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
    PHP_ME(php_wxScreenDC, __construct, arginfo_void, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxScreenDC * php_wxScreenDC_fetch_object(zend_object *obj) {
    return (zo_wxScreenDC *)(
        (char *)(obj) - XtOffsetOf(zo_wxScreenDC, zo)
    );
}

#define Z_wxScreenDC_P(zv) \
    php_wxScreenDC_fetch_object(Z_OBJ_P(zv))
#endif //WXPHP_DC_H_GUARD
