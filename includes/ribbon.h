/*
 * @author Mário Soares
 * @contributors Jefferson González
 * @contributors René Vögeli / Rangee GmbH
 * 
 * @license 
 * This file is part of wxPHP check the LICENSE file for information.
 * 
 * @note
 * This file was auto-generated by the wxPHP source maker
*/

#ifndef WXPHP_RIBBON_H_GUARD
#define WXPHP_RIBBON_H_GUARD

#include "references.h"
#include "object_types.h"
#include "arginfo_void.h"

ZEND_BEGIN_ARG_INFO_EX(wxphp_ribbon_get_args, 0, 0, 1)
    ZEND_ARG_INFO(0, name)
ZEND_END_ARG_INFO()

extern zend_class_entry* php_wxRibbonArtProvider_entry;
extern zend_object_handlers wxphp_wxRibbonArtProvider_object_handlers;
void php_wxRibbonArtProvider_destruction_handler(zend_resource*);

class wxRibbonArtProvider_php: public wxRibbonArtProvider{
    public:

    
    wxRibbonArtProvider* Clone() const;
    void DrawButtonBarBackground(wxDC& dc, wxWindow* wnd, const wxRect& rect);
    void DrawGalleryBackground(wxDC& dc, wxRibbonGallery* wnd, const wxRect& rect);
    void DrawGalleryItemBackground(wxDC& dc, wxRibbonGallery* wnd, const wxRect& rect, wxRibbonGalleryItem* item);
    void DrawMinimisedPanel(wxDC& dc, wxRibbonPanel* wnd, const wxRect& rect, wxBitmap& bitmap);
    void DrawPageBackground(wxDC& dc, wxWindow* wnd, const wxRect& rect);
    void DrawPanelBackground(wxDC& dc, wxRibbonPanel* wnd, const wxRect& rect);
    void DrawScrollButton(wxDC& dc, wxWindow* wnd, const wxRect& rect, long style);
    void DrawTabCtrlBackground(wxDC& dc, wxWindow* wnd, const wxRect& rect);
    void DrawTabSeparator(wxDC& dc, wxWindow* wnd, const wxRect& rect, double visibility);
    void DrawTool(wxDC& dc, wxWindow* wnd, const wxRect& rect, const wxBitmap& bitmap, wxRibbonButtonKind kind, long state);
    void DrawToolBarBackground(wxDC& dc, wxWindow* wnd, const wxRect& rect);
    void DrawToolGroupBackground(wxDC& dc, wxWindow* wnd, const wxRect& rect);
    void GetBarTabWidth(wxDC& dc, wxWindow* wnd, const wxString& label, const wxBitmap& bitmap, int* ideal, int* small_begin_need_separator, int* small_must_have_separator, int* minimum);
    wxColour GetColour(int id) const;
    void GetColourScheme(wxColour* primary, wxColour* secondary, wxColour* tertiary) const;
    long GetFlags() const;
    wxFont GetFont(int id) const;
    wxSize GetGalleryClientSize(wxDC& dc, const wxRibbonGallery* wnd, wxSize size, wxPoint* client_offset, wxRect* scroll_up_button, wxRect* scroll_down_button, wxRect* extension_button);
    wxSize GetGallerySize(wxDC& dc, const wxRibbonGallery* wnd, wxSize client_size);
    int GetMetric(int id) const;
    wxSize GetMinimisedPanelMinimumSize(wxDC& dc, const wxRibbonPanel* wnd, wxSize* desired_bitmap_size, wxDirection* expanded_panel_direction);
    wxRect GetPageBackgroundRedrawArea(wxDC& dc, const wxRibbonPage* wnd, wxSize page_old_size, wxSize page_new_size);
    wxSize GetPanelClientSize(wxDC& dc, const wxRibbonPanel* wnd, wxSize size, wxPoint* client_offset);
    wxSize GetPanelSize(wxDC& dc, const wxRibbonPanel* wnd, wxSize client_size, wxPoint* client_offset);
    wxSize GetScrollButtonMinimumSize(wxDC& dc, wxWindow* wnd, long style);
    wxSize GetToolSize(wxDC& dc, wxWindow* wnd, wxSize bitmap_size, wxRibbonButtonKind kind, bool is_first, bool is_last, wxRect* dropdown_region);
    void SetColourScheme(const wxColour& primary, const wxColour& secondary, const wxColour& tertiary);
    void SetFlags(long flags);
    void SetFont(int id, const wxFont& font);
    void SetMetric(int id, int new_val);
    void DrawButtonBarButton(wxDC& dc, wxWindow* wnd, const wxRect& rect, wxRibbonButtonKind kind, long state, const wxString& label, const wxBitmap& bitmap_large, const wxBitmap& bitmap_small);
    bool GetButtonBarButtonSize(wxDC& dc, wxWindow* wnd, wxRibbonButtonKind kind, wxRibbonButtonBarButtonState size, const wxString& label, wxSize bitmap_size_large, wxSize bitmap_size_small, wxSize* button_size, wxRect* normal_region, wxRect* dropdown_region);
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxRibbonArtProvider{
    wxRibbonArtProvider_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxRibbonArtProvider;

void php_wxRibbonArtProvider_free(void *object);
zend_object* php_wxRibbonArtProvider_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxRibbonArtProvider_functions[] = {
    PHP_ME(php_wxRibbonArtProvider, GetColor, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxRibbonArtProvider, SetColor, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_FE_END
};
#endif


static inline zo_wxRibbonArtProvider * php_wxRibbonArtProvider_fetch_object(zend_object *obj) {
    return (zo_wxRibbonArtProvider *)(
        (char *)(obj) - XtOffsetOf(zo_wxRibbonArtProvider, zo)
    );
}

#define Z_wxRibbonArtProvider_P(zv) \
    php_wxRibbonArtProvider_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxRibbonBar_entry;
extern zend_object_handlers wxphp_wxRibbonBar_object_handlers;
void php_wxRibbonBar_destruction_handler(zend_resource*);

class wxRibbonBar_php: public wxRibbonBar{
    public:

    wxRibbonBar_php():wxRibbonBar(){}
    wxRibbonBar_php(wxWindow* parent, wxWindowID id=wxID_ANY, const wxPoint& pos=wxDefaultPosition, const wxSize& size=wxDefaultSize, long style=wxRIBBON_BAR_DEFAULT_STYLE):wxRibbonBar(parent, id, pos, size, style){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxRibbonBar{
    wxRibbonBar_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxRibbonBar;

void php_wxRibbonBar_free(void *object);
zend_object* php_wxRibbonBar_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxRibbonBar_functions[] = {
    PHP_ME(php_wxRibbonBar, ArePanelsShown, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxRibbonBar, Create, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxRibbonBar, DismissExpandedPanel, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxRibbonBar, GetActivePage, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxRibbonBar, GetPage, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxRibbonBar, HidePanels, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxRibbonBar, Realize, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxRibbonBar, SetActivePage, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxRibbonBar, SetArtProvider, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxRibbonBar, SetTabCtrlMargins, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxRibbonBar, ShowPanels, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxRibbonBar, __construct, arginfo_void, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxRibbonBar * php_wxRibbonBar_fetch_object(zend_object *obj) {
    return (zo_wxRibbonBar *)(
        (char *)(obj) - XtOffsetOf(zo_wxRibbonBar, zo)
    );
}

#define Z_wxRibbonBar_P(zv) \
    php_wxRibbonBar_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxRibbonButtonBar_entry;
extern zend_object_handlers wxphp_wxRibbonButtonBar_object_handlers;
void php_wxRibbonButtonBar_destruction_handler(zend_resource*);

class wxRibbonButtonBar_php: public wxRibbonButtonBar{
    public:

    wxRibbonButtonBar_php():wxRibbonButtonBar(){}
    wxRibbonButtonBar_php(wxWindow* parent, wxWindowID id=wxID_ANY, const wxPoint& pos=wxDefaultPosition, const wxSize& size=wxDefaultSize, long style=0):wxRibbonButtonBar(parent, id, pos, size, style){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxRibbonButtonBar{
    wxRibbonButtonBar_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxRibbonButtonBar;

void php_wxRibbonButtonBar_free(void *object);
zend_object* php_wxRibbonButtonBar_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxRibbonButtonBar_functions[] = {
    PHP_ME(php_wxRibbonButtonBar, AddDropdownButton, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxRibbonButtonBar, AddHybridButton, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxRibbonButtonBar, AddToggleButton, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxRibbonButtonBar, ClearButtons, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxRibbonButtonBar, Create, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxRibbonButtonBar, DeleteButton, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxRibbonButtonBar, EnableButton, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxRibbonButtonBar, Realize, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxRibbonButtonBar, ToggleButton, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxRibbonButtonBar, __construct, arginfo_void, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_ME(php_wxRibbonButtonBar, AddButton, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_FE_END
};
#endif


static inline zo_wxRibbonButtonBar * php_wxRibbonButtonBar_fetch_object(zend_object *obj) {
    return (zo_wxRibbonButtonBar *)(
        (char *)(obj) - XtOffsetOf(zo_wxRibbonButtonBar, zo)
    );
}

#define Z_wxRibbonButtonBar_P(zv) \
    php_wxRibbonButtonBar_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxRibbonControl_entry;
extern zend_object_handlers wxphp_wxRibbonControl_object_handlers;
void php_wxRibbonControl_destruction_handler(zend_resource*);

class wxRibbonControl_php: public wxRibbonControl{
    public:

    wxRibbonControl_php():wxRibbonControl(){}
    wxRibbonControl_php(wxWindow* parent, wxWindowID id, const wxPoint& pos=wxDefaultPosition, const wxSize& size=wxDefaultSize, long style=0, const wxValidator& validator=wxDefaultValidator, const wxString& name=wxControlNameStr):wxRibbonControl(parent, id, pos, size, style, validator, name){}
    
    wxSize DoGetNextLargerSize(wxOrientation direction, wxSize relative_to) const;
    wxSize DoGetNextSmallerSize(wxOrientation direction, wxSize relative_to) const;
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxRibbonControl{
    wxRibbonControl_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxRibbonControl;

void php_wxRibbonControl_free(void *object);
zend_object* php_wxRibbonControl_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxRibbonControl_functions[] = {
    PHP_ME(php_wxRibbonControl, GetArtProvider, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxRibbonControl, GetNextLargerSize, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxRibbonControl, GetNextSmallerSize, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxRibbonControl, IsSizingContinuous, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxRibbonControl, Realise, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxRibbonControl, Realize, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxRibbonControl, SetArtProvider, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxRibbonControl, __construct, arginfo_void, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxRibbonControl * php_wxRibbonControl_fetch_object(zend_object *obj) {
    return (zo_wxRibbonControl *)(
        (char *)(obj) - XtOffsetOf(zo_wxRibbonControl, zo)
    );
}

#define Z_wxRibbonControl_P(zv) \
    php_wxRibbonControl_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxRibbonGallery_entry;
extern zend_object_handlers wxphp_wxRibbonGallery_object_handlers;
void php_wxRibbonGallery_destruction_handler(zend_resource*);

class wxRibbonGallery_php: public wxRibbonGallery{
    public:

    wxRibbonGallery_php():wxRibbonGallery(){}
    wxRibbonGallery_php(wxWindow* parent, wxWindowID id=wxID_ANY, const wxPoint& pos=wxDefaultPosition, const wxSize& size=wxDefaultSize, long style=0):wxRibbonGallery(parent, id, pos, size, style){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxRibbonGallery{
    wxRibbonGallery_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxRibbonGallery;

void php_wxRibbonGallery_free(void *object);
zend_object* php_wxRibbonGallery_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxRibbonGallery_functions[] = {
    PHP_ME(php_wxRibbonGallery, Append, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxRibbonGallery, Clear, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxRibbonGallery, Create, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxRibbonGallery, EnsureVisible, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxRibbonGallery, GetActiveItem, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxRibbonGallery, GetCount, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxRibbonGallery, GetDownButtonState, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxRibbonGallery, GetExtensionButtonState, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxRibbonGallery, GetHoveredItem, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxRibbonGallery, GetItem, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxRibbonGallery, GetItemClientData, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxRibbonGallery, GetItemClientObject, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxRibbonGallery, GetSelection, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxRibbonGallery, GetUpButtonState, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxRibbonGallery, IsEmpty, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxRibbonGallery, IsHovered, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxRibbonGallery, ScrollLines, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxRibbonGallery, ScrollPixels, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxRibbonGallery, SetItemClientData, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxRibbonGallery, SetItemClientObject, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxRibbonGallery, SetSelection, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxRibbonGallery, __construct, arginfo_void, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxRibbonGallery * php_wxRibbonGallery_fetch_object(zend_object *obj) {
    return (zo_wxRibbonGallery *)(
        (char *)(obj) - XtOffsetOf(zo_wxRibbonGallery, zo)
    );
}

#define Z_wxRibbonGallery_P(zv) \
    php_wxRibbonGallery_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxRibbonPage_entry;
extern zend_object_handlers wxphp_wxRibbonPage_object_handlers;
void php_wxRibbonPage_destruction_handler(zend_resource*);

class wxRibbonPage_php: public wxRibbonPage{
    public:

    wxRibbonPage_php():wxRibbonPage(){}
    wxRibbonPage_php(wxRibbonBar* parent, wxWindowID id=wxID_ANY, const wxString& label=wxEmptyString, const wxBitmap& icon=wxNullBitmap, long style=0):wxRibbonPage(parent, id, label, icon, style){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxRibbonPage{
    wxRibbonPage_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxRibbonPage;

void php_wxRibbonPage_free(void *object);
zend_object* php_wxRibbonPage_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxRibbonPage_functions[] = {
    PHP_ME(php_wxRibbonPage, AdjustRectToIncludeScrollButtons, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxRibbonPage, Create, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxRibbonPage, DismissExpandedPanel, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxRibbonPage, GetIcon, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxRibbonPage, GetMajorAxis, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxRibbonPage, Realize, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxRibbonPage, ScrollLines, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxRibbonPage, ScrollPixels, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxRibbonPage, SetArtProvider, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxRibbonPage, SetSizeWithScrollButtonAdjustment, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxRibbonPage, __construct, arginfo_void, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxRibbonPage * php_wxRibbonPage_fetch_object(zend_object *obj) {
    return (zo_wxRibbonPage *)(
        (char *)(obj) - XtOffsetOf(zo_wxRibbonPage, zo)
    );
}

#define Z_wxRibbonPage_P(zv) \
    php_wxRibbonPage_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxRibbonPanel_entry;
extern zend_object_handlers wxphp_wxRibbonPanel_object_handlers;
void php_wxRibbonPanel_destruction_handler(zend_resource*);

class wxRibbonPanel_php: public wxRibbonPanel{
    public:

    wxRibbonPanel_php():wxRibbonPanel(){}
    wxRibbonPanel_php(wxWindow* parent, wxWindowID id=wxID_ANY, const wxString& label=wxEmptyString, const wxBitmap& minimised_icon=wxNullBitmap, const wxPoint& pos=wxDefaultPosition, const wxSize& size=wxDefaultSize, long style=wxRIBBON_PANEL_DEFAULT_STYLE):wxRibbonPanel(parent, id, label, minimised_icon, pos, size, style){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxRibbonPanel{
    wxRibbonPanel_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxRibbonPanel;

void php_wxRibbonPanel_free(void *object);
zend_object* php_wxRibbonPanel_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxRibbonPanel_functions[] = {
    PHP_ME(php_wxRibbonPanel, CanAutoMinimise, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxRibbonPanel, Create, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxRibbonPanel, GetExpandedDummy, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxRibbonPanel, GetExpandedPanel, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxRibbonPanel, GetMinimisedIcon, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxRibbonPanel, HideExpanded, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxRibbonPanel, IsHovered, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxRibbonPanel, IsMinimised, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxRibbonPanel, Realize, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxRibbonPanel, SetArtProvider, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxRibbonPanel, ShowExpanded, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxRibbonPanel, __construct, arginfo_void, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxRibbonPanel * php_wxRibbonPanel_fetch_object(zend_object *obj) {
    return (zo_wxRibbonPanel *)(
        (char *)(obj) - XtOffsetOf(zo_wxRibbonPanel, zo)
    );
}

#define Z_wxRibbonPanel_P(zv) \
    php_wxRibbonPanel_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxRibbonToolBar_entry;
extern zend_object_handlers wxphp_wxRibbonToolBar_object_handlers;
void php_wxRibbonToolBar_destruction_handler(zend_resource*);

class wxRibbonToolBar_php: public wxRibbonToolBar{
    public:

    wxRibbonToolBar_php():wxRibbonToolBar(){}
    wxRibbonToolBar_php(wxWindow* parent, wxWindowID id=wxID_ANY, const wxPoint& pos=wxDefaultPosition, const wxSize& size=wxDefaultSize, long style=0):wxRibbonToolBar(parent, id, pos, size, style){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxRibbonToolBar{
    wxRibbonToolBar_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxRibbonToolBar;

void php_wxRibbonToolBar_free(void *object);
zend_object* php_wxRibbonToolBar_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxRibbonToolBar_functions[] = {
    PHP_ME(php_wxRibbonToolBar, AddDropdownTool, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxRibbonToolBar, AddHybridTool, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxRibbonToolBar, AddSeparator, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxRibbonToolBar, AddTool, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxRibbonToolBar, Create, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxRibbonToolBar, SetRows, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxRibbonToolBar, __construct, arginfo_void, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxRibbonToolBar * php_wxRibbonToolBar_fetch_object(zend_object *obj) {
    return (zo_wxRibbonToolBar *)(
        (char *)(obj) - XtOffsetOf(zo_wxRibbonToolBar, zo)
    );
}

#define Z_wxRibbonToolBar_P(zv) \
    php_wxRibbonToolBar_fetch_object(Z_OBJ_P(zv))
#endif //WXPHP_RIBBON_H_GUARD
