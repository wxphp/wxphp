/*
 * @author Mário Soares
 * @contributors Jefferson González
 * @contributors René Vögeli / Rangee GmbH
 * 
 * @license 
 * This file is part of wxPHP check the LICENSE file for information.
 * 
 * @note
 * This file was auto-generated by the wxPHP source maker
*/

#ifndef WXPHP_DND_H_GUARD
#define WXPHP_DND_H_GUARD

#include "references.h"
#include "object_types.h"

ZEND_BEGIN_ARG_INFO_EX(wxphp_dnd_get_args, 0, 0, 1)
    ZEND_ARG_INFO(0, name)
ZEND_END_ARG_INFO()

extern zend_class_entry* php_wxClipboard_entry;
extern zend_object_handlers wxphp_wxClipboard_object_handlers;
void php_wxClipboard_destruction_handler(zend_resource*);

class wxClipboard_php: public wxClipboard{
    public:

    wxClipboard_php():wxClipboard(){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxClipboard{
    wxClipboard_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxClipboard;

void php_wxClipboard_free(void *object);
zend_object* php_wxClipboard_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
ZEND_BEGIN_ARG_INFO_EX(php_wxClipboard_AddData_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, data)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxClipboard_Clear_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxClipboard_Close_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxClipboard_Flush_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxClipboard_GetData_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, data)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxClipboard_IsOpened_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxClipboard_IsSupported_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, format)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxClipboard_IsUsingPrimarySelection_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxClipboard_Open_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxClipboard_SetData_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, data)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxClipboard_UsePrimarySelection_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, primary)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxClipboard___construct_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, other)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxClipboard_Get_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxClipboard_UnShare_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxClipboard_UnRef_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxClipboard_IsSameAs_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, obj)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxClipboard_Ref_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, clone)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxClipboard_GetClassInfo_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxClipboard_IsKindOf_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, info)
ZEND_END_ARG_INFO()

static zend_function_entry php_wxClipboard_functions[] = {
    PHP_ME(php_wxClipboard, AddData, php_wxClipboard_AddData_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxClipboard, Clear, php_wxClipboard_Clear_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxClipboard, Close, php_wxClipboard_Close_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxClipboard, Flush, php_wxClipboard_Flush_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxClipboard, GetData, php_wxClipboard_GetData_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxClipboard, IsOpened, php_wxClipboard_IsOpened_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxClipboard, IsSupported, php_wxClipboard_IsSupported_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxClipboard, IsUsingPrimarySelection, php_wxClipboard_IsUsingPrimarySelection_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxClipboard, Open, php_wxClipboard_Open_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxClipboard, SetData, php_wxClipboard_SetData_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxClipboard, UsePrimarySelection, php_wxClipboard_UsePrimarySelection_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxClipboard, __construct, php_wxClipboard___construct_arg_infos, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_ME(php_wxClipboard, Get, php_wxClipboard_Get_arg_infos, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
    PHP_FE_END
};
#endif


static inline zo_wxClipboard * php_wxClipboard_fetch_object(zend_object *obj) {
    return (zo_wxClipboard *)(
        (char *)(obj) - XtOffsetOf(zo_wxClipboard, zo)
    );
}

#define Z_wxClipboard_P(zv) \
    php_wxClipboard_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxDataFormat_entry;
extern zend_object_handlers wxphp_wxDataFormat_object_handlers;
void php_wxDataFormat_destruction_handler(zend_resource*);

class wxDataFormat_php: public wxDataFormat{
    public:

    wxDataFormat_php(wxDataFormatId format=wxDF_INVALID):wxDataFormat(format){}
    wxDataFormat_php(const wxString& format):wxDataFormat(format){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxDataFormat{
    wxDataFormat_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxDataFormat;

void php_wxDataFormat_free(void *object);
zend_object* php_wxDataFormat_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
ZEND_BEGIN_ARG_INFO_EX(php_wxDataFormat_GetId_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxDataFormat_GetType_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxDataFormat_SetId_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, format)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxDataFormat_SetType_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, type)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxDataFormat___construct_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, format)
ZEND_END_ARG_INFO()

static zend_function_entry php_wxDataFormat_functions[] = {
    PHP_ME(php_wxDataFormat, GetId, php_wxDataFormat_GetId_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataFormat, GetType, php_wxDataFormat_GetType_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataFormat, SetId, php_wxDataFormat_SetId_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataFormat, SetType, php_wxDataFormat_SetType_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataFormat, __construct, php_wxDataFormat___construct_arg_infos, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxDataFormat * php_wxDataFormat_fetch_object(zend_object *obj) {
    return (zo_wxDataFormat *)(
        (char *)(obj) - XtOffsetOf(zo_wxDataFormat, zo)
    );
}

#define Z_wxDataFormat_P(zv) \
    php_wxDataFormat_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxDataObject_entry;
extern zend_object_handlers wxphp_wxDataObject_object_handlers;
void php_wxDataObject_destruction_handler(zend_resource*);

class wxDataObject_php: public wxDataObject{
    public:

    wxDataObject_php():wxDataObject(){}
    
    void GetAllFormats(wxDataFormat* formats, Direction dir=Get) const;
    bool GetDataHere(const wxDataFormat& format, void* buf) const;
    size_t GetDataSize(const wxDataFormat& format) const;
    size_t GetFormatCount(Direction dir=Get) const;
    wxDataFormat GetPreferredFormat(Direction dir=Get) const;
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxDataObject{
    wxDataObject_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxDataObject;

void php_wxDataObject_free(void *object);
zend_object* php_wxDataObject_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
ZEND_BEGIN_ARG_INFO_EX(php_wxDataObject_IsSupported_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, format)
    ZEND_ARG_INFO(0, dir)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxDataObject_SetData_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, format)
    ZEND_ARG_INFO(0, len)
    ZEND_ARG_INFO(0, buf)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxDataObject___construct_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()

static zend_function_entry php_wxDataObject_functions[] = {
    PHP_ME(php_wxDataObject, IsSupported, php_wxDataObject_IsSupported_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataObject, SetData, php_wxDataObject_SetData_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataObject, __construct, php_wxDataObject___construct_arg_infos, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxDataObject * php_wxDataObject_fetch_object(zend_object *obj) {
    return (zo_wxDataObject *)(
        (char *)(obj) - XtOffsetOf(zo_wxDataObject, zo)
    );
}

#define Z_wxDataObject_P(zv) \
    php_wxDataObject_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxCustomDataObject_entry;
extern zend_object_handlers wxphp_wxCustomDataObject_object_handlers;
void php_wxCustomDataObject_destruction_handler(zend_resource*);

class wxCustomDataObject_php: public wxCustomDataObject{
    public:

    wxCustomDataObject_php(const wxDataFormat& format=wxFormatInvalid):wxCustomDataObject(format){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxCustomDataObject{
    wxCustomDataObject_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxCustomDataObject;

void php_wxCustomDataObject_free(void *object);
zend_object* php_wxCustomDataObject_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
ZEND_BEGIN_ARG_INFO_EX(php_wxCustomDataObject_Alloc_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, size)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxCustomDataObject_Free_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxCustomDataObject_GetData_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxCustomDataObject_GetSize_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxCustomDataObject_SetData_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, format)
    ZEND_ARG_INFO(0, len)
    ZEND_ARG_INFO(0, buf)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxCustomDataObject_TakeData_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, size)
    ZEND_ARG_INFO(0, data)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxCustomDataObject___construct_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, format)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxCustomDataObject_GetDataHere_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, buf)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxCustomDataObject_GetDataSize_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxCustomDataObject_GetFormat_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxCustomDataObject_SetFormat_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, format)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxCustomDataObject_IsSupported_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, format)
    ZEND_ARG_INFO(0, dir)
ZEND_END_ARG_INFO()

static zend_function_entry php_wxCustomDataObject_functions[] = {
    PHP_ME(php_wxCustomDataObject, Alloc, php_wxCustomDataObject_Alloc_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxCustomDataObject, Free, php_wxCustomDataObject_Free_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxCustomDataObject, GetData, php_wxCustomDataObject_GetData_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxCustomDataObject, GetSize, php_wxCustomDataObject_GetSize_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxCustomDataObject, SetData, php_wxCustomDataObject_SetData_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxCustomDataObject, TakeData, php_wxCustomDataObject_TakeData_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxCustomDataObject, __construct, php_wxCustomDataObject___construct_arg_infos, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxCustomDataObject * php_wxCustomDataObject_fetch_object(zend_object *obj) {
    return (zo_wxCustomDataObject *)(
        (char *)(obj) - XtOffsetOf(zo_wxCustomDataObject, zo)
    );
}

#define Z_wxCustomDataObject_P(zv) \
    php_wxCustomDataObject_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxDataObjectComposite_entry;
extern zend_object_handlers wxphp_wxDataObjectComposite_object_handlers;
void php_wxDataObjectComposite_destruction_handler(zend_resource*);

class wxDataObjectComposite_php: public wxDataObjectComposite{
    public:

    wxDataObjectComposite_php():wxDataObjectComposite(){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxDataObjectComposite{
    wxDataObjectComposite_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxDataObjectComposite;

void php_wxDataObjectComposite_free(void *object);
zend_object* php_wxDataObjectComposite_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
ZEND_BEGIN_ARG_INFO_EX(php_wxDataObjectComposite_Add_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, dataObject)
    ZEND_ARG_INFO(0, preferred)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxDataObjectComposite_GetReceivedFormat_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxDataObjectComposite___construct_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxDataObjectComposite_GetObject_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, format)
    ZEND_ARG_INFO(0, dir)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxDataObjectComposite_IsSupported_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, format)
    ZEND_ARG_INFO(0, dir)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxDataObjectComposite_SetData_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, format)
    ZEND_ARG_INFO(0, len)
    ZEND_ARG_INFO(0, buf)
ZEND_END_ARG_INFO()

static zend_function_entry php_wxDataObjectComposite_functions[] = {
    PHP_ME(php_wxDataObjectComposite, Add, php_wxDataObjectComposite_Add_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataObjectComposite, GetReceivedFormat, php_wxDataObjectComposite_GetReceivedFormat_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataObjectComposite, __construct, php_wxDataObjectComposite___construct_arg_infos, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_ME(php_wxDataObjectComposite, GetObject, php_wxDataObjectComposite_GetObject_arg_infos, ZEND_ACC_PUBLIC)
    PHP_FE_END
};
#endif


static inline zo_wxDataObjectComposite * php_wxDataObjectComposite_fetch_object(zend_object *obj) {
    return (zo_wxDataObjectComposite *)(
        (char *)(obj) - XtOffsetOf(zo_wxDataObjectComposite, zo)
    );
}

#define Z_wxDataObjectComposite_P(zv) \
    php_wxDataObjectComposite_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxDataObjectSimple_entry;
extern zend_object_handlers wxphp_wxDataObjectSimple_object_handlers;
void php_wxDataObjectSimple_destruction_handler(zend_resource*);

class wxDataObjectSimple_php: public wxDataObjectSimple{
    public:

    wxDataObjectSimple_php(const wxDataFormat& format=wxFormatInvalid):wxDataObjectSimple(format){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxDataObjectSimple{
    wxDataObjectSimple_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxDataObjectSimple;

void php_wxDataObjectSimple_free(void *object);
zend_object* php_wxDataObjectSimple_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
ZEND_BEGIN_ARG_INFO_EX(php_wxDataObjectSimple_GetDataHere_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, buf)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxDataObjectSimple_GetDataSize_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxDataObjectSimple_GetFormat_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxDataObjectSimple_SetData_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, format)
    ZEND_ARG_INFO(0, len)
    ZEND_ARG_INFO(0, buf)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxDataObjectSimple_SetFormat_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, format)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxDataObjectSimple___construct_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, format)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxDataObjectSimple_IsSupported_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, format)
    ZEND_ARG_INFO(0, dir)
ZEND_END_ARG_INFO()

static zend_function_entry php_wxDataObjectSimple_functions[] = {
    PHP_ME(php_wxDataObjectSimple, GetDataHere, php_wxDataObjectSimple_GetDataHere_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataObjectSimple, GetDataSize, php_wxDataObjectSimple_GetDataSize_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataObjectSimple, GetFormat, php_wxDataObjectSimple_GetFormat_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataObjectSimple, SetData, php_wxDataObjectSimple_SetData_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataObjectSimple, SetFormat, php_wxDataObjectSimple_SetFormat_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataObjectSimple, __construct, php_wxDataObjectSimple___construct_arg_infos, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxDataObjectSimple * php_wxDataObjectSimple_fetch_object(zend_object *obj) {
    return (zo_wxDataObjectSimple *)(
        (char *)(obj) - XtOffsetOf(zo_wxDataObjectSimple, zo)
    );
}

#define Z_wxDataObjectSimple_P(zv) \
    php_wxDataObjectSimple_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxBitmapDataObject_entry;
extern zend_object_handlers wxphp_wxBitmapDataObject_object_handlers;
void php_wxBitmapDataObject_destruction_handler(zend_resource*);

class wxBitmapDataObject_php: public wxBitmapDataObject{
    public:

    wxBitmapDataObject_php(const wxBitmap& bitmap=wxNullBitmap):wxBitmapDataObject(bitmap){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxBitmapDataObject{
    wxBitmapDataObject_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxBitmapDataObject;

void php_wxBitmapDataObject_free(void *object);
zend_object* php_wxBitmapDataObject_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
ZEND_BEGIN_ARG_INFO_EX(php_wxBitmapDataObject_GetBitmap_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxBitmapDataObject_SetBitmap_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, bitmap)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxBitmapDataObject___construct_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, bitmap)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxBitmapDataObject_GetDataHere_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, buf)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxBitmapDataObject_GetDataSize_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxBitmapDataObject_GetFormat_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxBitmapDataObject_SetData_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, format)
    ZEND_ARG_INFO(0, len)
    ZEND_ARG_INFO(0, buf)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxBitmapDataObject_SetFormat_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, format)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxBitmapDataObject_IsSupported_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, format)
    ZEND_ARG_INFO(0, dir)
ZEND_END_ARG_INFO()

static zend_function_entry php_wxBitmapDataObject_functions[] = {
    PHP_ME(php_wxBitmapDataObject, GetBitmap, php_wxBitmapDataObject_GetBitmap_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxBitmapDataObject, SetBitmap, php_wxBitmapDataObject_SetBitmap_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxBitmapDataObject, __construct, php_wxBitmapDataObject___construct_arg_infos, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxBitmapDataObject * php_wxBitmapDataObject_fetch_object(zend_object *obj) {
    return (zo_wxBitmapDataObject *)(
        (char *)(obj) - XtOffsetOf(zo_wxBitmapDataObject, zo)
    );
}

#define Z_wxBitmapDataObject_P(zv) \
    php_wxBitmapDataObject_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxURLDataObject_entry;
extern zend_object_handlers wxphp_wxURLDataObject_object_handlers;
void php_wxURLDataObject_destruction_handler(zend_resource*);

class wxURLDataObject_php: public wxURLDataObject{
    public:

    wxURLDataObject_php(const wxString& url=wxEmptyString):wxURLDataObject(url){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxURLDataObject{
    wxURLDataObject_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxURLDataObject;

void php_wxURLDataObject_free(void *object);
zend_object* php_wxURLDataObject_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
ZEND_BEGIN_ARG_INFO_EX(php_wxURLDataObject_GetURL_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxURLDataObject_SetURL_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, url)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxURLDataObject___construct_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, url)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxURLDataObject_GetFormat_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxURLDataObject_GetText_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxURLDataObject_GetTextLength_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxURLDataObject_GetFormatCount_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, dir)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxURLDataObject_GetAllFormats_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, formats)
    ZEND_ARG_INFO(0, dir)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxURLDataObject_SetText_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, strText)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxURLDataObject_GetDataHere_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, buf)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxURLDataObject_GetDataSize_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxURLDataObject_SetData_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, format)
    ZEND_ARG_INFO(0, len)
    ZEND_ARG_INFO(0, buf)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxURLDataObject_SetFormat_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, format)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxURLDataObject_IsSupported_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, format)
    ZEND_ARG_INFO(0, dir)
ZEND_END_ARG_INFO()

static zend_function_entry php_wxURLDataObject_functions[] = {
    PHP_ME(php_wxURLDataObject, GetURL, php_wxURLDataObject_GetURL_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxURLDataObject, SetURL, php_wxURLDataObject_SetURL_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxURLDataObject, __construct, php_wxURLDataObject___construct_arg_infos, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxURLDataObject * php_wxURLDataObject_fetch_object(zend_object *obj) {
    return (zo_wxURLDataObject *)(
        (char *)(obj) - XtOffsetOf(zo_wxURLDataObject, zo)
    );
}

#define Z_wxURLDataObject_P(zv) \
    php_wxURLDataObject_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxTextDataObject_entry;
extern zend_object_handlers wxphp_wxTextDataObject_object_handlers;
void php_wxTextDataObject_destruction_handler(zend_resource*);

class wxTextDataObject_php: public wxTextDataObject{
    public:

    wxTextDataObject_php(const wxString& text=wxEmptyString):wxTextDataObject(text){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxTextDataObject{
    wxTextDataObject_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxTextDataObject;

void php_wxTextDataObject_free(void *object);
zend_object* php_wxTextDataObject_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
ZEND_BEGIN_ARG_INFO_EX(php_wxTextDataObject_GetFormat_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxTextDataObject_GetText_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxTextDataObject_GetTextLength_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxTextDataObject_GetFormatCount_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, dir)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxTextDataObject_GetAllFormats_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, formats)
    ZEND_ARG_INFO(0, dir)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxTextDataObject_SetText_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, strText)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxTextDataObject___construct_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, text)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxTextDataObject_GetDataHere_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, buf)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxTextDataObject_GetDataSize_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxTextDataObject_SetData_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, format)
    ZEND_ARG_INFO(0, len)
    ZEND_ARG_INFO(0, buf)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxTextDataObject_SetFormat_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, format)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxTextDataObject_IsSupported_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, format)
    ZEND_ARG_INFO(0, dir)
ZEND_END_ARG_INFO()

static zend_function_entry php_wxTextDataObject_functions[] = {
    PHP_ME(php_wxTextDataObject, GetFormat, php_wxTextDataObject_GetFormat_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxTextDataObject, GetText, php_wxTextDataObject_GetText_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxTextDataObject, GetTextLength, php_wxTextDataObject_GetTextLength_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxTextDataObject, GetFormatCount, php_wxTextDataObject_GetFormatCount_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxTextDataObject, GetAllFormats, php_wxTextDataObject_GetAllFormats_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxTextDataObject, SetText, php_wxTextDataObject_SetText_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxTextDataObject, __construct, php_wxTextDataObject___construct_arg_infos, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxTextDataObject * php_wxTextDataObject_fetch_object(zend_object *obj) {
    return (zo_wxTextDataObject *)(
        (char *)(obj) - XtOffsetOf(zo_wxTextDataObject, zo)
    );
}

#define Z_wxTextDataObject_P(zv) \
    php_wxTextDataObject_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxFileDataObject_entry;
extern zend_object_handlers wxphp_wxFileDataObject_object_handlers;
void php_wxFileDataObject_destruction_handler(zend_resource*);

class wxFileDataObject_php: public wxFileDataObject{
    public:

    wxFileDataObject_php():wxFileDataObject(){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxFileDataObject{
    wxFileDataObject_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxFileDataObject;

void php_wxFileDataObject_free(void *object);
zend_object* php_wxFileDataObject_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
ZEND_BEGIN_ARG_INFO_EX(php_wxFileDataObject_AddFile_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, file)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxFileDataObject_GetFilenames_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxFileDataObject___construct_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, format)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxFileDataObject_GetDataHere_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, buf)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxFileDataObject_GetDataSize_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxFileDataObject_GetFormat_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxFileDataObject_SetData_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, format)
    ZEND_ARG_INFO(0, len)
    ZEND_ARG_INFO(0, buf)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxFileDataObject_SetFormat_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, format)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxFileDataObject_IsSupported_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, format)
    ZEND_ARG_INFO(0, dir)
ZEND_END_ARG_INFO()

static zend_function_entry php_wxFileDataObject_functions[] = {
    PHP_ME(php_wxFileDataObject, AddFile, php_wxFileDataObject_AddFile_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxFileDataObject, GetFilenames, php_wxFileDataObject_GetFilenames_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxFileDataObject, __construct, php_wxFileDataObject___construct_arg_infos, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxFileDataObject * php_wxFileDataObject_fetch_object(zend_object *obj) {
    return (zo_wxFileDataObject *)(
        (char *)(obj) - XtOffsetOf(zo_wxFileDataObject, zo)
    );
}

#define Z_wxFileDataObject_P(zv) \
    php_wxFileDataObject_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxDropTarget_entry;
extern zend_object_handlers wxphp_wxDropTarget_object_handlers;
void php_wxDropTarget_destruction_handler(zend_resource*);

class wxDropTarget_php: public wxDropTarget{
    public:

    wxDropTarget_php(wxDataObject* data=NULL):wxDropTarget(data){}
    
    void OnLeave();
    wxDragResult OnDragOver(wxCoord x, wxCoord y, wxDragResult defResult);
    wxDragResult OnEnter(wxCoord x, wxCoord y, wxDragResult defResult);
    wxDragResult OnData(wxCoord x, wxCoord y, wxDragResult defResult);
    bool OnDrop(wxCoord x, wxCoord y);
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxDropTarget{
    wxDropTarget_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxDropTarget;

void php_wxDropTarget_free(void *object);
zend_object* php_wxDropTarget_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
ZEND_BEGIN_ARG_INFO_EX(php_wxDropTarget___construct_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, data)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxDropTarget_SetDataObject_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, data)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxDropTarget_GetData_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()

static zend_function_entry php_wxDropTarget_functions[] = {
    PHP_ME(php_wxDropTarget, __construct, php_wxDropTarget___construct_arg_infos, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_ME(php_wxDropTarget, SetDataObject, php_wxDropTarget_SetDataObject_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDropTarget, GetData, php_wxDropTarget_GetData_arg_infos, ZEND_ACC_PUBLIC)
    PHP_FE_END
};
#endif


static inline zo_wxDropTarget * php_wxDropTarget_fetch_object(zend_object *obj) {
    return (zo_wxDropTarget *)(
        (char *)(obj) - XtOffsetOf(zo_wxDropTarget, zo)
    );
}

#define Z_wxDropTarget_P(zv) \
    php_wxDropTarget_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxTextDropTarget_entry;
extern zend_object_handlers wxphp_wxTextDropTarget_object_handlers;
void php_wxTextDropTarget_destruction_handler(zend_resource*);

class wxTextDropTarget_php: public wxTextDropTarget{
    public:

    wxTextDropTarget_php():wxTextDropTarget(){}
    
    bool OnDropText(wxCoord x, wxCoord y, const wxString& data);
    bool OnDrop(wxCoord x, wxCoord y);
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxTextDropTarget{
    wxTextDropTarget_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxTextDropTarget;

void php_wxTextDropTarget_free(void *object);
zend_object* php_wxTextDropTarget_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
ZEND_BEGIN_ARG_INFO_EX(php_wxTextDropTarget___construct_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, data)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxTextDropTarget_SetDataObject_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, data)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxTextDropTarget_GetData_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()

static zend_function_entry php_wxTextDropTarget_functions[] = {
    PHP_ME(php_wxTextDropTarget, __construct, php_wxTextDropTarget___construct_arg_infos, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxTextDropTarget * php_wxTextDropTarget_fetch_object(zend_object *obj) {
    return (zo_wxTextDropTarget *)(
        (char *)(obj) - XtOffsetOf(zo_wxTextDropTarget, zo)
    );
}

#define Z_wxTextDropTarget_P(zv) \
    php_wxTextDropTarget_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxFileDropTarget_entry;
extern zend_object_handlers wxphp_wxFileDropTarget_object_handlers;
void php_wxFileDropTarget_destruction_handler(zend_resource*);

class wxFileDropTarget_php: public wxFileDropTarget{
    public:

    wxFileDropTarget_php():wxFileDropTarget(){}
    
    bool OnDropFiles(wxCoord x, wxCoord y, const wxArrayString& filenames);
    bool OnDrop(wxCoord x, wxCoord y);
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxFileDropTarget{
    wxFileDropTarget_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxFileDropTarget;

void php_wxFileDropTarget_free(void *object);
zend_object* php_wxFileDropTarget_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
ZEND_BEGIN_ARG_INFO_EX(php_wxFileDropTarget___construct_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, data)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxFileDropTarget_SetDataObject_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, data)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxFileDropTarget_GetData_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()

static zend_function_entry php_wxFileDropTarget_functions[] = {
    PHP_ME(php_wxFileDropTarget, __construct, php_wxFileDropTarget___construct_arg_infos, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxFileDropTarget * php_wxFileDropTarget_fetch_object(zend_object *obj) {
    return (zo_wxFileDropTarget *)(
        (char *)(obj) - XtOffsetOf(zo_wxFileDropTarget, zo)
    );
}

#define Z_wxFileDropTarget_P(zv) \
    php_wxFileDropTarget_fetch_object(Z_OBJ_P(zv))
#endif //WXPHP_DND_H_GUARD
