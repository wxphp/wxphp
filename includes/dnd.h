/*
 * @author Mário Soares
 * @contributors Jefferson González
 * @contributors René Vögeli / Rangee GmbH
 * 
 * @license 
 * This file is part of wxPHP check the LICENSE file for information.
 * 
 * @note
 * This file was auto-generated by the wxPHP source maker
*/

#ifndef WXPHP_DND_H_GUARD
#define WXPHP_DND_H_GUARD

#include "references.h"
#include "object_types.h"
#include "arginfo_void.h"

ZEND_BEGIN_ARG_INFO_EX(wxphp_dnd_get_args, 0, 0, 1)
    ZEND_ARG_INFO(0, name)
ZEND_END_ARG_INFO()

extern zend_class_entry* php_wxClipboard_entry;
extern zend_object_handlers wxphp_wxClipboard_object_handlers;
void php_wxClipboard_destruction_handler(zend_resource*);

class wxClipboard_php: public wxClipboard{
    public:

    wxClipboard_php():wxClipboard(){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxClipboard{
    wxClipboard_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxClipboard;

void php_wxClipboard_free(void *object);
zend_object* php_wxClipboard_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxClipboard_functions[] = {
    PHP_ME(php_wxClipboard, AddData, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxClipboard, Clear, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxClipboard, Close, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxClipboard, Flush, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxClipboard, GetData, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxClipboard, IsOpened, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxClipboard, IsSupported, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxClipboard, IsUsingPrimarySelection, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxClipboard, Open, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxClipboard, SetData, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxClipboard, UsePrimarySelection, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxClipboard, __construct, arginfo_void, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_ME(php_wxClipboard, Get, arginfo_void, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
    PHP_FE_END
};
#endif


static inline zo_wxClipboard * php_wxClipboard_fetch_object(zend_object *obj) {
    return (zo_wxClipboard *)(
        (char *)(obj) - XtOffsetOf(zo_wxClipboard, zo)
    );
}

#define Z_wxClipboard_P(zv) \
    php_wxClipboard_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxDataFormat_entry;
extern zend_object_handlers wxphp_wxDataFormat_object_handlers;
void php_wxDataFormat_destruction_handler(zend_resource*);

class wxDataFormat_php: public wxDataFormat{
    public:

    wxDataFormat_php(wxDataFormatId format=wxDF_INVALID):wxDataFormat(format){}
    wxDataFormat_php(const wxString& format):wxDataFormat(format){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxDataFormat{
    wxDataFormat_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxDataFormat;

void php_wxDataFormat_free(void *object);
zend_object* php_wxDataFormat_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxDataFormat_functions[] = {
    PHP_ME(php_wxDataFormat, GetId, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataFormat, GetType, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataFormat, SetId, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataFormat, SetType, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataFormat, __construct, arginfo_void, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxDataFormat * php_wxDataFormat_fetch_object(zend_object *obj) {
    return (zo_wxDataFormat *)(
        (char *)(obj) - XtOffsetOf(zo_wxDataFormat, zo)
    );
}

#define Z_wxDataFormat_P(zv) \
    php_wxDataFormat_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxDataObject_entry;
extern zend_object_handlers wxphp_wxDataObject_object_handlers;
void php_wxDataObject_destruction_handler(zend_resource*);

class wxDataObject_php: public wxDataObject{
    public:

    wxDataObject_php():wxDataObject(){}
    
    void GetAllFormats(wxDataFormat* formats, Direction dir=Get) const;
    bool GetDataHere(const wxDataFormat& format, void* buf) const;
    size_t GetDataSize(const wxDataFormat& format) const;
    size_t GetFormatCount(Direction dir=Get) const;
    wxDataFormat GetPreferredFormat(Direction dir=Get) const;
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxDataObject{
    wxDataObject_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxDataObject;

void php_wxDataObject_free(void *object);
zend_object* php_wxDataObject_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxDataObject_functions[] = {
    PHP_ME(php_wxDataObject, IsSupported, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataObject, SetData, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataObject, __construct, arginfo_void, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxDataObject * php_wxDataObject_fetch_object(zend_object *obj) {
    return (zo_wxDataObject *)(
        (char *)(obj) - XtOffsetOf(zo_wxDataObject, zo)
    );
}

#define Z_wxDataObject_P(zv) \
    php_wxDataObject_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxCustomDataObject_entry;
extern zend_object_handlers wxphp_wxCustomDataObject_object_handlers;
void php_wxCustomDataObject_destruction_handler(zend_resource*);

class wxCustomDataObject_php: public wxCustomDataObject{
    public:

    wxCustomDataObject_php(const wxDataFormat& format=wxFormatInvalid):wxCustomDataObject(format){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxCustomDataObject{
    wxCustomDataObject_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxCustomDataObject;

void php_wxCustomDataObject_free(void *object);
zend_object* php_wxCustomDataObject_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxCustomDataObject_functions[] = {
    PHP_ME(php_wxCustomDataObject, Alloc, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxCustomDataObject, Free, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxCustomDataObject, GetData, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxCustomDataObject, GetSize, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxCustomDataObject, SetData, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxCustomDataObject, TakeData, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxCustomDataObject, __construct, arginfo_void, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxCustomDataObject * php_wxCustomDataObject_fetch_object(zend_object *obj) {
    return (zo_wxCustomDataObject *)(
        (char *)(obj) - XtOffsetOf(zo_wxCustomDataObject, zo)
    );
}

#define Z_wxCustomDataObject_P(zv) \
    php_wxCustomDataObject_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxDataObjectComposite_entry;
extern zend_object_handlers wxphp_wxDataObjectComposite_object_handlers;
void php_wxDataObjectComposite_destruction_handler(zend_resource*);

class wxDataObjectComposite_php: public wxDataObjectComposite{
    public:

    wxDataObjectComposite_php():wxDataObjectComposite(){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxDataObjectComposite{
    wxDataObjectComposite_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxDataObjectComposite;

void php_wxDataObjectComposite_free(void *object);
zend_object* php_wxDataObjectComposite_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxDataObjectComposite_functions[] = {
    PHP_ME(php_wxDataObjectComposite, Add, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataObjectComposite, GetReceivedFormat, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataObjectComposite, __construct, arginfo_void, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_ME(php_wxDataObjectComposite, GetObject, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_FE_END
};
#endif


static inline zo_wxDataObjectComposite * php_wxDataObjectComposite_fetch_object(zend_object *obj) {
    return (zo_wxDataObjectComposite *)(
        (char *)(obj) - XtOffsetOf(zo_wxDataObjectComposite, zo)
    );
}

#define Z_wxDataObjectComposite_P(zv) \
    php_wxDataObjectComposite_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxDataObjectSimple_entry;
extern zend_object_handlers wxphp_wxDataObjectSimple_object_handlers;
void php_wxDataObjectSimple_destruction_handler(zend_resource*);

class wxDataObjectSimple_php: public wxDataObjectSimple{
    public:

    wxDataObjectSimple_php(const wxDataFormat& format=wxFormatInvalid):wxDataObjectSimple(format){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxDataObjectSimple{
    wxDataObjectSimple_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxDataObjectSimple;

void php_wxDataObjectSimple_free(void *object);
zend_object* php_wxDataObjectSimple_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxDataObjectSimple_functions[] = {
    PHP_ME(php_wxDataObjectSimple, GetDataHere, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataObjectSimple, GetDataSize, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataObjectSimple, GetFormat, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataObjectSimple, SetData, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataObjectSimple, SetFormat, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataObjectSimple, __construct, arginfo_void, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxDataObjectSimple * php_wxDataObjectSimple_fetch_object(zend_object *obj) {
    return (zo_wxDataObjectSimple *)(
        (char *)(obj) - XtOffsetOf(zo_wxDataObjectSimple, zo)
    );
}

#define Z_wxDataObjectSimple_P(zv) \
    php_wxDataObjectSimple_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxBitmapDataObject_entry;
extern zend_object_handlers wxphp_wxBitmapDataObject_object_handlers;
void php_wxBitmapDataObject_destruction_handler(zend_resource*);

class wxBitmapDataObject_php: public wxBitmapDataObject{
    public:

    wxBitmapDataObject_php(const wxBitmap& bitmap=wxNullBitmap):wxBitmapDataObject(bitmap){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxBitmapDataObject{
    wxBitmapDataObject_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxBitmapDataObject;

void php_wxBitmapDataObject_free(void *object);
zend_object* php_wxBitmapDataObject_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxBitmapDataObject_functions[] = {
    PHP_ME(php_wxBitmapDataObject, GetBitmap, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxBitmapDataObject, SetBitmap, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxBitmapDataObject, __construct, arginfo_void, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxBitmapDataObject * php_wxBitmapDataObject_fetch_object(zend_object *obj) {
    return (zo_wxBitmapDataObject *)(
        (char *)(obj) - XtOffsetOf(zo_wxBitmapDataObject, zo)
    );
}

#define Z_wxBitmapDataObject_P(zv) \
    php_wxBitmapDataObject_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxURLDataObject_entry;
extern zend_object_handlers wxphp_wxURLDataObject_object_handlers;
void php_wxURLDataObject_destruction_handler(zend_resource*);

class wxURLDataObject_php: public wxURLDataObject{
    public:

    wxURLDataObject_php(const wxString& url=wxEmptyString):wxURLDataObject(url){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxURLDataObject{
    wxURLDataObject_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxURLDataObject;

void php_wxURLDataObject_free(void *object);
zend_object* php_wxURLDataObject_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxURLDataObject_functions[] = {
    PHP_ME(php_wxURLDataObject, GetURL, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxURLDataObject, SetURL, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxURLDataObject, __construct, arginfo_void, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxURLDataObject * php_wxURLDataObject_fetch_object(zend_object *obj) {
    return (zo_wxURLDataObject *)(
        (char *)(obj) - XtOffsetOf(zo_wxURLDataObject, zo)
    );
}

#define Z_wxURLDataObject_P(zv) \
    php_wxURLDataObject_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxTextDataObject_entry;
extern zend_object_handlers wxphp_wxTextDataObject_object_handlers;
void php_wxTextDataObject_destruction_handler(zend_resource*);

class wxTextDataObject_php: public wxTextDataObject{
    public:

    wxTextDataObject_php(const wxString& text=wxEmptyString):wxTextDataObject(text){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxTextDataObject{
    wxTextDataObject_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxTextDataObject;

void php_wxTextDataObject_free(void *object);
zend_object* php_wxTextDataObject_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxTextDataObject_functions[] = {
    PHP_ME(php_wxTextDataObject, GetFormat, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxTextDataObject, GetText, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxTextDataObject, GetTextLength, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxTextDataObject, GetFormatCount, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxTextDataObject, GetAllFormats, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxTextDataObject, SetText, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxTextDataObject, __construct, arginfo_void, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxTextDataObject * php_wxTextDataObject_fetch_object(zend_object *obj) {
    return (zo_wxTextDataObject *)(
        (char *)(obj) - XtOffsetOf(zo_wxTextDataObject, zo)
    );
}

#define Z_wxTextDataObject_P(zv) \
    php_wxTextDataObject_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxFileDataObject_entry;
extern zend_object_handlers wxphp_wxFileDataObject_object_handlers;
void php_wxFileDataObject_destruction_handler(zend_resource*);

class wxFileDataObject_php: public wxFileDataObject{
    public:

    wxFileDataObject_php():wxFileDataObject(){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxFileDataObject{
    wxFileDataObject_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxFileDataObject;

void php_wxFileDataObject_free(void *object);
zend_object* php_wxFileDataObject_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxFileDataObject_functions[] = {
    PHP_ME(php_wxFileDataObject, AddFile, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxFileDataObject, GetFilenames, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxFileDataObject, __construct, arginfo_void, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxFileDataObject * php_wxFileDataObject_fetch_object(zend_object *obj) {
    return (zo_wxFileDataObject *)(
        (char *)(obj) - XtOffsetOf(zo_wxFileDataObject, zo)
    );
}

#define Z_wxFileDataObject_P(zv) \
    php_wxFileDataObject_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxDropTarget_entry;
extern zend_object_handlers wxphp_wxDropTarget_object_handlers;
void php_wxDropTarget_destruction_handler(zend_resource*);

class wxDropTarget_php: public wxDropTarget{
    public:

    wxDropTarget_php(wxDataObject* data=NULL):wxDropTarget(data){}
    
    void OnLeave();
    wxDragResult OnDragOver(wxCoord x, wxCoord y, wxDragResult defResult);
    wxDragResult OnEnter(wxCoord x, wxCoord y, wxDragResult defResult);
    wxDragResult OnData(wxCoord x, wxCoord y, wxDragResult defResult);
    bool OnDrop(wxCoord x, wxCoord y);
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxDropTarget{
    wxDropTarget_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxDropTarget;

void php_wxDropTarget_free(void *object);
zend_object* php_wxDropTarget_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxDropTarget_functions[] = {
    PHP_ME(php_wxDropTarget, __construct, arginfo_void, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_ME(php_wxDropTarget, SetDataObject, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDropTarget, GetData, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_FE_END
};
#endif


static inline zo_wxDropTarget * php_wxDropTarget_fetch_object(zend_object *obj) {
    return (zo_wxDropTarget *)(
        (char *)(obj) - XtOffsetOf(zo_wxDropTarget, zo)
    );
}

#define Z_wxDropTarget_P(zv) \
    php_wxDropTarget_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxTextDropTarget_entry;
extern zend_object_handlers wxphp_wxTextDropTarget_object_handlers;
void php_wxTextDropTarget_destruction_handler(zend_resource*);

class wxTextDropTarget_php: public wxTextDropTarget{
    public:

    wxTextDropTarget_php():wxTextDropTarget(){}
    
    bool OnDropText(wxCoord x, wxCoord y, const wxString& data);
    bool OnDrop(wxCoord x, wxCoord y);
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxTextDropTarget{
    wxTextDropTarget_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxTextDropTarget;

void php_wxTextDropTarget_free(void *object);
zend_object* php_wxTextDropTarget_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxTextDropTarget_functions[] = {
    PHP_ME(php_wxTextDropTarget, __construct, arginfo_void, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxTextDropTarget * php_wxTextDropTarget_fetch_object(zend_object *obj) {
    return (zo_wxTextDropTarget *)(
        (char *)(obj) - XtOffsetOf(zo_wxTextDropTarget, zo)
    );
}

#define Z_wxTextDropTarget_P(zv) \
    php_wxTextDropTarget_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxFileDropTarget_entry;
extern zend_object_handlers wxphp_wxFileDropTarget_object_handlers;
void php_wxFileDropTarget_destruction_handler(zend_resource*);

class wxFileDropTarget_php: public wxFileDropTarget{
    public:

    wxFileDropTarget_php():wxFileDropTarget(){}
    
    bool OnDropFiles(wxCoord x, wxCoord y, const wxArrayString& filenames);
    bool OnDrop(wxCoord x, wxCoord y);
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxFileDropTarget{
    wxFileDropTarget_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxFileDropTarget;

void php_wxFileDropTarget_free(void *object);
zend_object* php_wxFileDropTarget_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxFileDropTarget_functions[] = {
    PHP_ME(php_wxFileDropTarget, __construct, arginfo_void, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxFileDropTarget * php_wxFileDropTarget_fetch_object(zend_object *obj) {
    return (zo_wxFileDropTarget *)(
        (char *)(obj) - XtOffsetOf(zo_wxFileDropTarget, zo)
    );
}

#define Z_wxFileDropTarget_P(zv) \
    php_wxFileDropTarget_fetch_object(Z_OBJ_P(zv))
#endif //WXPHP_DND_H_GUARD
