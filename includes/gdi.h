/*
 * @author Mário Soares
 * @contributors Jefferson González
 * @contributors René Vögeli / Rangee GmbH
 * 
 * @license 
 * This file is part of wxPHP check the LICENSE file for information.
 * 
 * @note
 * This file was auto-generated by the wxPHP source maker
*/

#ifndef WXPHP_GDI_H_GUARD
#define WXPHP_GDI_H_GUARD

#include "references.h"
#include "object_types.h"

ZEND_BEGIN_ARG_INFO_EX(wxphp_gdi_get_args, 0, 0, 1)
    ZEND_ARG_INFO(0, name)
ZEND_END_ARG_INFO()

extern zend_class_entry* php_wxGraphicsGradientStop_entry;
extern zend_object_handlers wxphp_wxGraphicsGradientStop_object_handlers;
void php_wxGraphicsGradientStop_destruction_handler(zend_resource*);

class wxGraphicsGradientStop_php: public wxGraphicsGradientStop{
    public:

    wxGraphicsGradientStop_php(wxColour col=wxTransparentColour, float pos=0.):wxGraphicsGradientStop(col, pos){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxGraphicsGradientStop{
    wxGraphicsGradientStop_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxGraphicsGradientStop;

void php_wxGraphicsGradientStop_free(void *object);
zend_object* php_wxGraphicsGradientStop_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
ZEND_BEGIN_ARG_INFO_EX(php_wxGraphicsGradientStop_GetColour_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxGraphicsGradientStop_GetPosition_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxGraphicsGradientStop_SetColour_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, col)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxGraphicsGradientStop_SetPosition_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, pos)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxGraphicsGradientStop___construct_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, col)
    ZEND_ARG_INFO(0, pos)
ZEND_END_ARG_INFO()

static zend_function_entry php_wxGraphicsGradientStop_functions[] = {
    PHP_ME(php_wxGraphicsGradientStop, GetColour, php_wxGraphicsGradientStop_GetColour_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGraphicsGradientStop, GetPosition, php_wxGraphicsGradientStop_GetPosition_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGraphicsGradientStop, SetColour, php_wxGraphicsGradientStop_SetColour_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGraphicsGradientStop, SetPosition, php_wxGraphicsGradientStop_SetPosition_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGraphicsGradientStop, __construct, php_wxGraphicsGradientStop___construct_arg_infos, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxGraphicsGradientStop * php_wxGraphicsGradientStop_fetch_object(zend_object *obj) {
    return (zo_wxGraphicsGradientStop *)(
        (char *)(obj) - XtOffsetOf(zo_wxGraphicsGradientStop, zo)
    );
}

#define Z_wxGraphicsGradientStop_P(zv) \
    php_wxGraphicsGradientStop_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxGraphicsGradientStops_entry;
extern zend_object_handlers wxphp_wxGraphicsGradientStops_object_handlers;
void php_wxGraphicsGradientStops_destruction_handler(zend_resource*);

class wxGraphicsGradientStops_php: public wxGraphicsGradientStops{
    public:

    wxGraphicsGradientStops_php(wxColour startCol=wxTransparentColour, wxColour endCol=wxTransparentColour):wxGraphicsGradientStops(startCol, endCol){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxGraphicsGradientStops{
    wxGraphicsGradientStops_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxGraphicsGradientStops;

void php_wxGraphicsGradientStops_free(void *object);
zend_object* php_wxGraphicsGradientStops_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
ZEND_BEGIN_ARG_INFO_EX(php_wxGraphicsGradientStops_Add_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, col)
    ZEND_ARG_INFO(0, pos)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxGraphicsGradientStops_GetCount_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxGraphicsGradientStops_GetEndColour_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxGraphicsGradientStops_GetStartColour_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxGraphicsGradientStops_Item_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, n)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxGraphicsGradientStops_SetEndColour_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, col)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxGraphicsGradientStops_SetStartColour_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, col)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxGraphicsGradientStops___construct_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, startCol)
    ZEND_ARG_INFO(0, endCol)
ZEND_END_ARG_INFO()

static zend_function_entry php_wxGraphicsGradientStops_functions[] = {
    PHP_ME(php_wxGraphicsGradientStops, Add, php_wxGraphicsGradientStops_Add_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGraphicsGradientStops, GetCount, php_wxGraphicsGradientStops_GetCount_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGraphicsGradientStops, GetEndColour, php_wxGraphicsGradientStops_GetEndColour_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGraphicsGradientStops, GetStartColour, php_wxGraphicsGradientStops_GetStartColour_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGraphicsGradientStops, Item, php_wxGraphicsGradientStops_Item_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGraphicsGradientStops, SetEndColour, php_wxGraphicsGradientStops_SetEndColour_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGraphicsGradientStops, SetStartColour, php_wxGraphicsGradientStops_SetStartColour_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGraphicsGradientStops, __construct, php_wxGraphicsGradientStops___construct_arg_infos, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxGraphicsGradientStops * php_wxGraphicsGradientStops_fetch_object(zend_object *obj) {
    return (zo_wxGraphicsGradientStops *)(
        (char *)(obj) - XtOffsetOf(zo_wxGraphicsGradientStops, zo)
    );
}

#define Z_wxGraphicsGradientStops_P(zv) \
    php_wxGraphicsGradientStops_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxAnimation_entry;
extern zend_object_handlers wxphp_wxAnimation_object_handlers;
void php_wxAnimation_destruction_handler(zend_resource*);

class wxAnimation_php: public wxAnimation{
    public:

    wxAnimation_php(const wxAnimation& anim):wxAnimation(anim){}
    wxAnimation_php(const wxString& name, wxAnimationType type=wxANIMATION_TYPE_ANY):wxAnimation(name, type){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxAnimation{
    wxAnimation_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxAnimation;

void php_wxAnimation_free(void *object);
zend_object* php_wxAnimation_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
ZEND_BEGIN_ARG_INFO_EX(php_wxAnimation_GetDelay_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, i)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxAnimation_GetFrame_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, i)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxAnimation_GetFrameCount_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxAnimation_GetSize_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxAnimation_IsOk_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxAnimation_LoadFile_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, name)
    ZEND_ARG_INFO(0, type)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxAnimation___construct_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, name)
    ZEND_ARG_INFO(0, type)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxAnimation_Load_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, stream)
    ZEND_ARG_INFO(0, type)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxAnimation_UnShare_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxAnimation_UnRef_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxAnimation_IsSameAs_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, obj)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxAnimation_Ref_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, clone)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxAnimation_GetClassInfo_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxAnimation_IsKindOf_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, info)
ZEND_END_ARG_INFO()

static zend_function_entry php_wxAnimation_functions[] = {
    PHP_ME(php_wxAnimation, GetDelay, php_wxAnimation_GetDelay_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxAnimation, GetFrame, php_wxAnimation_GetFrame_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxAnimation, GetFrameCount, php_wxAnimation_GetFrameCount_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxAnimation, GetSize, php_wxAnimation_GetSize_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxAnimation, IsOk, php_wxAnimation_IsOk_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxAnimation, LoadFile, php_wxAnimation_LoadFile_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxAnimation, __construct, php_wxAnimation___construct_arg_infos, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_ME(php_wxAnimation, Load, php_wxAnimation_Load_arg_infos, ZEND_ACC_PUBLIC)
    PHP_FE_END
};
#endif


static inline zo_wxAnimation * php_wxAnimation_fetch_object(zend_object *obj) {
    return (zo_wxAnimation *)(
        (char *)(obj) - XtOffsetOf(zo_wxAnimation, zo)
    );
}

#define Z_wxAnimation_P(zv) \
    php_wxAnimation_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxBitmapHandler_entry;
extern zend_object_handlers wxphp_wxBitmapHandler_object_handlers;
void php_wxBitmapHandler_destruction_handler(zend_resource*);

class wxBitmapHandler_php: public wxBitmapHandler{
    public:

    wxBitmapHandler_php():wxBitmapHandler(){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxBitmapHandler{
    wxBitmapHandler_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxBitmapHandler;

void php_wxBitmapHandler_free(void *object);
zend_object* php_wxBitmapHandler_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
ZEND_BEGIN_ARG_INFO_EX(php_wxBitmapHandler___construct_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, other)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxBitmapHandler_SetType_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, type)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxBitmapHandler_SetName_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, name)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxBitmapHandler_SetExtension_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, extension)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxBitmapHandler_LoadFile_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, bitmap)
    ZEND_ARG_INFO(0, name)
    ZEND_ARG_INFO(0, type)
    ZEND_ARG_INFO(0, desiredWidth)
    ZEND_ARG_INFO(0, desiredHeight)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxBitmapHandler_GetType_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxBitmapHandler_GetName_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxBitmapHandler_GetExtension_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxBitmapHandler_SaveFile_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, bitmap)
    ZEND_ARG_INFO(0, name)
    ZEND_ARG_INFO(0, type)
    ZEND_ARG_INFO(0, palette)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxBitmapHandler_Create_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, bitmap)
    ZEND_ARG_INFO(0, data)
    ZEND_ARG_INFO(0, type)
    ZEND_ARG_INFO(0, width)
    ZEND_ARG_INFO(0, height)
    ZEND_ARG_INFO(0, depth)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxBitmapHandler_UnShare_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxBitmapHandler_UnRef_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxBitmapHandler_IsSameAs_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, obj)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxBitmapHandler_Ref_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, clone)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxBitmapHandler_GetClassInfo_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxBitmapHandler_IsKindOf_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, info)
ZEND_END_ARG_INFO()

static zend_function_entry php_wxBitmapHandler_functions[] = {
    PHP_ME(php_wxBitmapHandler, __construct, php_wxBitmapHandler___construct_arg_infos, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_ME(php_wxBitmapHandler, SetType, php_wxBitmapHandler_SetType_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxBitmapHandler, SetName, php_wxBitmapHandler_SetName_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxBitmapHandler, SetExtension, php_wxBitmapHandler_SetExtension_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxBitmapHandler, LoadFile, php_wxBitmapHandler_LoadFile_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxBitmapHandler, GetType, php_wxBitmapHandler_GetType_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxBitmapHandler, GetName, php_wxBitmapHandler_GetName_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxBitmapHandler, GetExtension, php_wxBitmapHandler_GetExtension_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxBitmapHandler, SaveFile, php_wxBitmapHandler_SaveFile_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxBitmapHandler, Create, php_wxBitmapHandler_Create_arg_infos, ZEND_ACC_PUBLIC)
    PHP_FE_END
};
#endif


static inline zo_wxBitmapHandler * php_wxBitmapHandler_fetch_object(zend_object *obj) {
    return (zo_wxBitmapHandler *)(
        (char *)(obj) - XtOffsetOf(zo_wxBitmapHandler, zo)
    );
}

#define Z_wxBitmapHandler_P(zv) \
    php_wxBitmapHandler_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxBitmap_entry;
extern zend_object_handlers wxphp_wxBitmap_object_handlers;
void php_wxBitmap_destruction_handler(zend_resource*);

class wxBitmap_php: public wxBitmap{
    public:

    wxBitmap_php():wxBitmap(){}
    wxBitmap_php(const wxBitmap& bitmap):wxBitmap(bitmap){}
    wxBitmap_php(int width, int height, int depth=wxBITMAP_SCREEN_DEPTH):wxBitmap(width, height, depth){}
    wxBitmap_php(const wxSize& sz, int depth=wxBITMAP_SCREEN_DEPTH):wxBitmap(sz, depth){}
    wxBitmap_php(const wxString& name, wxBitmapType type=wxBITMAP_DEFAULT_TYPE):wxBitmap(name, type){}
    wxBitmap_php(const wxImage& img, int depth=wxBITMAP_SCREEN_DEPTH):wxBitmap(img, depth){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxBitmap{
    wxBitmap_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxBitmap;

void php_wxBitmap_free(void *object);
zend_object* php_wxBitmap_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
ZEND_BEGIN_ARG_INFO_EX(php_wxBitmap_AddHandler_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, handler)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxBitmap_CleanUpHandlers_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxBitmap_ConvertToDisabled_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, brightness)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxBitmap___construct_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, width)
    ZEND_ARG_INFO(0, height)
    ZEND_ARG_INFO(0, depth)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxBitmap_LoadFile_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, name)
    ZEND_ARG_INFO(0, type)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxBitmap_RemoveHandler_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, name)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxBitmap_SaveFile_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, name)
    ZEND_ARG_INFO(0, type)
    ZEND_ARG_INFO(0, palette)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxBitmap_SetDepth_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, depth)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxBitmap_SetHeight_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, height)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxBitmap_SetWidth_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, width)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxBitmap_ConvertToImage_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxBitmap_CopyFromIcon_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, icon)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxBitmap_Create_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, width)
    ZEND_ARG_INFO(0, height)
    ZEND_ARG_INFO(0, depth)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxBitmap_FindHandler_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, extension)
    ZEND_ARG_INFO(0, bitmapType)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxBitmap_GetDepth_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxBitmap_GetHeight_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxBitmap_GetMask_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxBitmap_GetPalette_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxBitmap_GetSize_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxBitmap_GetSubBitmap_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, rect)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxBitmap_GetWidth_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxBitmap_InitStandardHandlers_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxBitmap_InsertHandler_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, handler)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxBitmap_IsOk_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxBitmap_SetMask_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, mask)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxBitmap_SetPalette_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, palette)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxBitmap_UnShare_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxBitmap_UnRef_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxBitmap_IsSameAs_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, obj)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxBitmap_Ref_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, clone)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxBitmap_GetClassInfo_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxBitmap_IsKindOf_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, info)
ZEND_END_ARG_INFO()

static zend_function_entry php_wxBitmap_functions[] = {
    PHP_ME(php_wxBitmap, AddHandler, php_wxBitmap_AddHandler_arg_infos, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
    PHP_ME(php_wxBitmap, CleanUpHandlers, php_wxBitmap_CleanUpHandlers_arg_infos, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
    PHP_ME(php_wxBitmap, ConvertToDisabled, php_wxBitmap_ConvertToDisabled_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxBitmap, __construct, php_wxBitmap___construct_arg_infos, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_ME(php_wxBitmap, LoadFile, php_wxBitmap_LoadFile_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxBitmap, RemoveHandler, php_wxBitmap_RemoveHandler_arg_infos, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
    PHP_ME(php_wxBitmap, SaveFile, php_wxBitmap_SaveFile_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxBitmap, SetDepth, php_wxBitmap_SetDepth_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxBitmap, SetHeight, php_wxBitmap_SetHeight_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxBitmap, SetWidth, php_wxBitmap_SetWidth_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxBitmap, ConvertToImage, php_wxBitmap_ConvertToImage_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxBitmap, CopyFromIcon, php_wxBitmap_CopyFromIcon_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxBitmap, Create, php_wxBitmap_Create_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxBitmap, FindHandler, php_wxBitmap_FindHandler_arg_infos, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
    PHP_ME(php_wxBitmap, GetDepth, php_wxBitmap_GetDepth_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxBitmap, GetHeight, php_wxBitmap_GetHeight_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxBitmap, GetMask, php_wxBitmap_GetMask_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxBitmap, GetPalette, php_wxBitmap_GetPalette_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxBitmap, GetSize, php_wxBitmap_GetSize_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxBitmap, GetSubBitmap, php_wxBitmap_GetSubBitmap_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxBitmap, GetWidth, php_wxBitmap_GetWidth_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxBitmap, InitStandardHandlers, php_wxBitmap_InitStandardHandlers_arg_infos, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
    PHP_ME(php_wxBitmap, InsertHandler, php_wxBitmap_InsertHandler_arg_infos, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
    PHP_ME(php_wxBitmap, IsOk, php_wxBitmap_IsOk_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxBitmap, SetMask, php_wxBitmap_SetMask_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxBitmap, SetPalette, php_wxBitmap_SetPalette_arg_infos, ZEND_ACC_PUBLIC)
    PHP_FE_END
};
#endif


static inline zo_wxBitmap * php_wxBitmap_fetch_object(zend_object *obj) {
    return (zo_wxBitmap *)(
        (char *)(obj) - XtOffsetOf(zo_wxBitmap, zo)
    );
}

#define Z_wxBitmap_P(zv) \
    php_wxBitmap_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxMask_entry;
extern zend_object_handlers wxphp_wxMask_object_handlers;
void php_wxMask_destruction_handler(zend_resource*);

class wxMask_php: public wxMask{
    public:

    wxMask_php():wxMask(){}
    wxMask_php(const wxBitmap& bitmap, int index):wxMask(bitmap, index){}
    wxMask_php(const wxBitmap& bitmap):wxMask(bitmap){}
    wxMask_php(const wxBitmap& bitmap, const wxColour& colour):wxMask(bitmap, colour){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxMask{
    wxMask_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxMask;

void php_wxMask_free(void *object);
zend_object* php_wxMask_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
ZEND_BEGIN_ARG_INFO_EX(php_wxMask_Create_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, bitmap)
    ZEND_ARG_INFO(0, index)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxMask___construct_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, bitmap)
    ZEND_ARG_INFO(0, index)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxMask_UnShare_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxMask_UnRef_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxMask_IsSameAs_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, obj)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxMask_Ref_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, clone)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxMask_GetClassInfo_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxMask_IsKindOf_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, info)
ZEND_END_ARG_INFO()

static zend_function_entry php_wxMask_functions[] = {
    PHP_ME(php_wxMask, Create, php_wxMask_Create_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxMask, __construct, php_wxMask___construct_arg_infos, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxMask * php_wxMask_fetch_object(zend_object *obj) {
    return (zo_wxMask *)(
        (char *)(obj) - XtOffsetOf(zo_wxMask, zo)
    );
}

#define Z_wxMask_P(zv) \
    php_wxMask_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxBrush_entry;
extern zend_object_handlers wxphp_wxBrush_object_handlers;
void php_wxBrush_destruction_handler(zend_resource*);

class wxBrush_php: public wxBrush{
    public:

    wxBrush_php():wxBrush(){}
    wxBrush_php(const wxColour& colour, wxBrushStyle style=wxBRUSHSTYLE_SOLID):wxBrush(colour, style){}
    wxBrush_php(const wxBitmap& stippleBitmap):wxBrush(stippleBitmap){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxBrush{
    wxBrush_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxBrush;

void php_wxBrush_free(void *object);
zend_object* php_wxBrush_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
ZEND_BEGIN_ARG_INFO_EX(php_wxBrush_GetColour_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxBrush_GetStipple_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxBrush_GetStyle_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxBrush_IsHatch_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxBrush_IsNonTransparent_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxBrush_IsOk_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxBrush_IsTransparent_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxBrush_SetColour_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, red)
    ZEND_ARG_INFO(0, green)
    ZEND_ARG_INFO(0, blue)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxBrush_SetStipple_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, bitmap)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxBrush_SetStyle_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, style)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxBrush___construct_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, colour)
    ZEND_ARG_INFO(0, style)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxBrush_UnShare_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxBrush_UnRef_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxBrush_IsSameAs_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, obj)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxBrush_Ref_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, clone)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxBrush_GetClassInfo_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxBrush_IsKindOf_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, info)
ZEND_END_ARG_INFO()

static zend_function_entry php_wxBrush_functions[] = {
    PHP_ME(php_wxBrush, GetColour, php_wxBrush_GetColour_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxBrush, GetStipple, php_wxBrush_GetStipple_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxBrush, GetStyle, php_wxBrush_GetStyle_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxBrush, IsHatch, php_wxBrush_IsHatch_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxBrush, IsNonTransparent, php_wxBrush_IsNonTransparent_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxBrush, IsOk, php_wxBrush_IsOk_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxBrush, IsTransparent, php_wxBrush_IsTransparent_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxBrush, SetColour, php_wxBrush_SetColour_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxBrush, SetStipple, php_wxBrush_SetStipple_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxBrush, SetStyle, php_wxBrush_SetStyle_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxBrush, __construct, php_wxBrush___construct_arg_infos, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxBrush * php_wxBrush_fetch_object(zend_object *obj) {
    return (zo_wxBrush *)(
        (char *)(obj) - XtOffsetOf(zo_wxBrush, zo)
    );
}

#define Z_wxBrush_P(zv) \
    php_wxBrush_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxColour_entry;
extern zend_object_handlers wxphp_wxColour_object_handlers;
void php_wxColour_destruction_handler(zend_resource*);

class wxColour_php: public wxColour{
    public:

    wxColour_php(unsigned char red, unsigned char green, unsigned char blue, unsigned char alpha=wxALPHA_OPAQUE):wxColour(red, green, blue, alpha){}
    wxColour_php(const wxString& colourName):wxColour(colourName){}
    wxColour_php(unsigned long colRGB):wxColour(colRGB){}
    wxColour_php(const wxColour& colour):wxColour(colour){}
    wxColour_php():wxColour(){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxColour{
    wxColour_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxColour;

void php_wxColour_free(void *object);
zend_object* php_wxColour_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
ZEND_BEGIN_ARG_INFO_EX(php_wxColour___construct_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, red)
    ZEND_ARG_INFO(0, green)
    ZEND_ARG_INFO(0, blue)
    ZEND_ARG_INFO(0, alpha)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxColour_Set_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, red)
    ZEND_ARG_INFO(0, green)
    ZEND_ARG_INFO(0, blue)
    ZEND_ARG_INFO(0, alpha)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxColour_Red_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxColour_SetRGB_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, colRGB)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxColour_SetRGBA_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, colRGBA)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxColour_Blue_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxColour_Green_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxColour_GetRGBA_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxColour_GetRGB_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxColour_Alpha_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxColour_UnShare_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxColour_UnRef_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxColour_IsSameAs_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, obj)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxColour_Ref_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, clone)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxColour_GetClassInfo_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxColour_IsKindOf_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, info)
ZEND_END_ARG_INFO()

static zend_function_entry php_wxColour_functions[] = {
    PHP_ME(php_wxColour, __construct, php_wxColour___construct_arg_infos, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_ME(php_wxColour, Set, php_wxColour_Set_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxColour, Red, php_wxColour_Red_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxColour, SetRGB, php_wxColour_SetRGB_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxColour, SetRGBA, php_wxColour_SetRGBA_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxColour, Blue, php_wxColour_Blue_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxColour, Green, php_wxColour_Green_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxColour, GetRGBA, php_wxColour_GetRGBA_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxColour, GetRGB, php_wxColour_GetRGB_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxColour, Alpha, php_wxColour_Alpha_arg_infos, ZEND_ACC_PUBLIC)
    PHP_FE_END
};
#endif


static inline zo_wxColour * php_wxColour_fetch_object(zend_object *obj) {
    return (zo_wxColour *)(
        (char *)(obj) - XtOffsetOf(zo_wxColour, zo)
    );
}

#define Z_wxColour_P(zv) \
    php_wxColour_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxCursor_entry;
extern zend_object_handlers wxphp_wxCursor_object_handlers;
void php_wxCursor_destruction_handler(zend_resource*);

class wxCursor_php: public wxCursor{
    public:

    wxCursor_php():wxCursor(){}
    wxCursor_php(const wxImage& image):wxCursor(image){}
    wxCursor_php(const wxCursor& cursor):wxCursor(cursor){}
    wxCursor_php(const wxString& cursorName, wxBitmapType type=wxCURSOR_DEFAULT_TYPE, int hotSpotX=0, int hotSpotY=0):wxCursor(cursorName, type, hotSpotX, hotSpotY){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxCursor{
    wxCursor_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxCursor;

void php_wxCursor_free(void *object);
zend_object* php_wxCursor_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
ZEND_BEGIN_ARG_INFO_EX(php_wxCursor_IsOk_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxCursor___construct_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, cursorName)
    ZEND_ARG_INFO(0, type)
    ZEND_ARG_INFO(0, hotSpotX)
    ZEND_ARG_INFO(0, hotSpotY)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxCursor_UnShare_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxCursor_UnRef_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxCursor_IsSameAs_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, obj)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxCursor_Ref_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, clone)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxCursor_GetClassInfo_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxCursor_IsKindOf_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, info)
ZEND_END_ARG_INFO()

static zend_function_entry php_wxCursor_functions[] = {
    PHP_ME(php_wxCursor, IsOk, php_wxCursor_IsOk_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxCursor, __construct, php_wxCursor___construct_arg_infos, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxCursor * php_wxCursor_fetch_object(zend_object *obj) {
    return (zo_wxCursor *)(
        (char *)(obj) - XtOffsetOf(zo_wxCursor, zo)
    );
}

#define Z_wxCursor_P(zv) \
    php_wxCursor_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxDCClipper_entry;
extern zend_object_handlers wxphp_wxDCClipper_object_handlers;
void php_wxDCClipper_destruction_handler(zend_resource*);

class wxDCClipper_php: public wxDCClipper{
    public:

    wxDCClipper_php(wxDC& dc, const wxRegion& region):wxDCClipper(dc, region){}
    wxDCClipper_php(wxDC& dc, const wxRect& rect):wxDCClipper(dc, rect){}
    wxDCClipper_php(wxDC& dc, wxCoord x, wxCoord y, wxCoord w, wxCoord h):wxDCClipper(dc, x, y, w, h){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxDCClipper{
    wxDCClipper_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxDCClipper;

void php_wxDCClipper_free(void *object);
zend_object* php_wxDCClipper_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
ZEND_BEGIN_ARG_INFO_EX(php_wxDCClipper___construct_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, dc)
    ZEND_ARG_INFO(0, x)
    ZEND_ARG_INFO(0, y)
    ZEND_ARG_INFO(0, w)
    ZEND_ARG_INFO(0, h)
ZEND_END_ARG_INFO()

static zend_function_entry php_wxDCClipper_functions[] = {
    PHP_ME(php_wxDCClipper, __construct, php_wxDCClipper___construct_arg_infos, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxDCClipper * php_wxDCClipper_fetch_object(zend_object *obj) {
    return (zo_wxDCClipper *)(
        (char *)(obj) - XtOffsetOf(zo_wxDCClipper, zo)
    );
}

#define Z_wxDCClipper_P(zv) \
    php_wxDCClipper_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxFont_entry;
extern zend_object_handlers wxphp_wxFont_object_handlers;
void php_wxFont_destruction_handler(zend_resource*);

class wxFont_php: public wxFont{
    public:

    wxFont_php():wxFont(){}
    wxFont_php(const wxFont& font):wxFont(font){}
    wxFont_php(int pointSize, wxFontFamily family, wxFontStyle style, wxFontWeight weight, bool underline=false, const wxString& faceName=wxEmptyString, wxFontEncoding encoding=wxFONTENCODING_DEFAULT):wxFont(pointSize, family, style, weight, underline, faceName, encoding){}
    wxFont_php(const wxSize& pixelSize, wxFontFamily family, wxFontStyle style, wxFontWeight weight, bool underline=false, const wxString& faceName=wxEmptyString, wxFontEncoding encoding=wxFONTENCODING_DEFAULT):wxFont(pixelSize, family, style, weight, underline, faceName, encoding){}
    wxFont_php(const wxString& nativeInfoString):wxFont(nativeInfoString){}
    wxFont_php(const wxNativeFontInfo& nativeInfo):wxFont(nativeInfo){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxFont{
    wxFont_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxFont;

void php_wxFont_free(void *object);
zend_object* php_wxFont_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
ZEND_BEGIN_ARG_INFO_EX(php_wxFont___construct_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, pointSize)
    ZEND_ARG_INFO(0, family)
    ZEND_ARG_INFO(0, style)
    ZEND_ARG_INFO(0, weight)
    ZEND_ARG_INFO(0, underline)
    ZEND_ARG_INFO(0, faceName)
    ZEND_ARG_INFO(0, encoding)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxFont_Bold_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxFont_GetDefaultEncoding_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxFont_GetEncoding_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxFont_GetFaceName_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxFont_GetFamily_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxFont_GetNativeFontInfoDesc_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxFont_GetNativeFontInfoUserDesc_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxFont_GetPixelSize_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxFont_GetPointSize_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxFont_GetStyle_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxFont_GetUnderlined_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxFont_GetWeight_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxFont_IsFixedWidth_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxFont_IsOk_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxFont_Italic_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxFont_Larger_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxFont_MakeBold_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxFont_MakeItalic_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxFont_MakeLarger_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxFont_MakeSmaller_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxFont_MakeUnderlined_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxFont_NewMethod_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, pointSize)
    ZEND_ARG_INFO(0, family)
    ZEND_ARG_INFO(0, style)
    ZEND_ARG_INFO(0, weight)
    ZEND_ARG_INFO(0, underline)
    ZEND_ARG_INFO(0, faceName)
    ZEND_ARG_INFO(0, encoding)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxFont_Scale_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, x)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxFont_Scaled_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, x)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxFont_SetDefaultEncoding_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, encoding)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxFont_SetEncoding_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, encoding)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxFont_SetFaceName_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, faceName)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxFont_SetFamily_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, family)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxFont_SetNativeFontInfo_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, info)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxFont_SetNativeFontInfoUserDesc_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, info)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxFont_SetPixelSize_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, pixelSize)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxFont_SetPointSize_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, pointSize)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxFont_SetStyle_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, style)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxFont_SetSymbolicSize_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, size)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxFont_SetSymbolicSizeRelativeTo_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, size)
    ZEND_ARG_INFO(0, base)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxFont_SetUnderlined_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, underlined)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxFont_SetWeight_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, weight)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxFont_Smaller_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxFont_Underlined_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxFont_GetNativeFontInfo_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxFont_UnShare_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxFont_UnRef_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxFont_IsSameAs_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, obj)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxFont_Ref_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, clone)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxFont_GetClassInfo_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxFont_IsKindOf_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, info)
ZEND_END_ARG_INFO()

static zend_function_entry php_wxFont_functions[] = {
    PHP_ME(php_wxFont, __construct, php_wxFont___construct_arg_infos, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_ME(php_wxFont, Bold, php_wxFont_Bold_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxFont, GetDefaultEncoding, php_wxFont_GetDefaultEncoding_arg_infos, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
    PHP_ME(php_wxFont, GetEncoding, php_wxFont_GetEncoding_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxFont, GetFaceName, php_wxFont_GetFaceName_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxFont, GetFamily, php_wxFont_GetFamily_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxFont, GetNativeFontInfoDesc, php_wxFont_GetNativeFontInfoDesc_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxFont, GetNativeFontInfoUserDesc, php_wxFont_GetNativeFontInfoUserDesc_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxFont, GetPixelSize, php_wxFont_GetPixelSize_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxFont, GetPointSize, php_wxFont_GetPointSize_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxFont, GetStyle, php_wxFont_GetStyle_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxFont, GetUnderlined, php_wxFont_GetUnderlined_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxFont, GetWeight, php_wxFont_GetWeight_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxFont, IsFixedWidth, php_wxFont_IsFixedWidth_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxFont, IsOk, php_wxFont_IsOk_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxFont, Italic, php_wxFont_Italic_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxFont, Larger, php_wxFont_Larger_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxFont, MakeBold, php_wxFont_MakeBold_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxFont, MakeItalic, php_wxFont_MakeItalic_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxFont, MakeLarger, php_wxFont_MakeLarger_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxFont, MakeSmaller, php_wxFont_MakeSmaller_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxFont, MakeUnderlined, php_wxFont_MakeUnderlined_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxFont, NewMethod, php_wxFont_NewMethod_arg_infos, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
    PHP_ME(php_wxFont, Scale, php_wxFont_Scale_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxFont, Scaled, php_wxFont_Scaled_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxFont, SetDefaultEncoding, php_wxFont_SetDefaultEncoding_arg_infos, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
    PHP_ME(php_wxFont, SetEncoding, php_wxFont_SetEncoding_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxFont, SetFaceName, php_wxFont_SetFaceName_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxFont, SetFamily, php_wxFont_SetFamily_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxFont, SetNativeFontInfo, php_wxFont_SetNativeFontInfo_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxFont, SetNativeFontInfoUserDesc, php_wxFont_SetNativeFontInfoUserDesc_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxFont, SetPixelSize, php_wxFont_SetPixelSize_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxFont, SetPointSize, php_wxFont_SetPointSize_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxFont, SetStyle, php_wxFont_SetStyle_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxFont, SetSymbolicSize, php_wxFont_SetSymbolicSize_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxFont, SetSymbolicSizeRelativeTo, php_wxFont_SetSymbolicSizeRelativeTo_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxFont, SetUnderlined, php_wxFont_SetUnderlined_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxFont, SetWeight, php_wxFont_SetWeight_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxFont, Smaller, php_wxFont_Smaller_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxFont, Underlined, php_wxFont_Underlined_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxFont, GetNativeFontInfo, php_wxFont_GetNativeFontInfo_arg_infos, ZEND_ACC_PUBLIC)
    PHP_FE_END
};
#endif


static inline zo_wxFont * php_wxFont_fetch_object(zend_object *obj) {
    return (zo_wxFont *)(
        (char *)(obj) - XtOffsetOf(zo_wxFont, zo)
    );
}

#define Z_wxFont_P(zv) \
    php_wxFont_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxFontList_entry;
extern zend_object_handlers wxphp_wxFontList_object_handlers;
void php_wxFontList_destruction_handler(zend_resource*);

class wxFontList_php: public wxFontList{
    public:

    wxFontList_php():wxFontList(){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxFontList{
    wxFontList_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxFontList;

void php_wxFontList_free(void *object);
zend_object* php_wxFontList_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
ZEND_BEGIN_ARG_INFO_EX(php_wxFontList___construct_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxFontList_FindOrCreateFont_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, point_size)
    ZEND_ARG_INFO(0, family)
    ZEND_ARG_INFO(0, style)
    ZEND_ARG_INFO(0, weight)
    ZEND_ARG_INFO(0, underline)
    ZEND_ARG_INFO(0, facename)
    ZEND_ARG_INFO(0, encoding)
ZEND_END_ARG_INFO()

static zend_function_entry php_wxFontList_functions[] = {
    PHP_ME(php_wxFontList, __construct, php_wxFontList___construct_arg_infos, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_ME(php_wxFontList, FindOrCreateFont, php_wxFontList_FindOrCreateFont_arg_infos, ZEND_ACC_PUBLIC)
    PHP_FE_END
};
#endif


static inline zo_wxFontList * php_wxFontList_fetch_object(zend_object *obj) {
    return (zo_wxFontList *)(
        (char *)(obj) - XtOffsetOf(zo_wxFontList, zo)
    );
}

#define Z_wxFontList_P(zv) \
    php_wxFontList_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxFontEnumerator_entry;
extern zend_object_handlers wxphp_wxFontEnumerator_object_handlers;
void php_wxFontEnumerator_destruction_handler(zend_resource*);

class wxFontEnumerator_php: public wxFontEnumerator{
    public:

    
    bool OnFontEncoding(const wxString& font, const wxString& encoding);
    bool OnFacename(const wxString& font);
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxFontEnumerator{
    wxFontEnumerator_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxFontEnumerator;

void php_wxFontEnumerator_free(void *object);
zend_object* php_wxFontEnumerator_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
ZEND_BEGIN_ARG_INFO_EX(php_wxFontEnumerator_IsValidFacename_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, facename)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxFontEnumerator_GetFacenames_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, encoding)
    ZEND_ARG_INFO(0, fixedWidthOnly)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxFontEnumerator_GetEncodings_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, facename)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxFontEnumerator_EnumerateFacenames_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, encoding)
    ZEND_ARG_INFO(0, fixedWidthOnly)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxFontEnumerator_EnumerateEncodings_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, font)
ZEND_END_ARG_INFO()

static zend_function_entry php_wxFontEnumerator_functions[] = {
    PHP_ME(php_wxFontEnumerator, IsValidFacename, php_wxFontEnumerator_IsValidFacename_arg_infos, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
    PHP_ME(php_wxFontEnumerator, GetFacenames, php_wxFontEnumerator_GetFacenames_arg_infos, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
    PHP_ME(php_wxFontEnumerator, GetEncodings, php_wxFontEnumerator_GetEncodings_arg_infos, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
    PHP_ME(php_wxFontEnumerator, EnumerateFacenames, php_wxFontEnumerator_EnumerateFacenames_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxFontEnumerator, EnumerateEncodings, php_wxFontEnumerator_EnumerateEncodings_arg_infos, ZEND_ACC_PUBLIC)
    PHP_FE_END
};
#endif


static inline zo_wxFontEnumerator * php_wxFontEnumerator_fetch_object(zend_object *obj) {
    return (zo_wxFontEnumerator *)(
        (char *)(obj) - XtOffsetOf(zo_wxFontEnumerator, zo)
    );
}

#define Z_wxFontEnumerator_P(zv) \
    php_wxFontEnumerator_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxNativeFontInfo_entry;
extern zend_object_handlers wxphp_wxNativeFontInfo_object_handlers;
void php_wxNativeFontInfo_destruction_handler(zend_resource*);

class wxNativeFontInfo_php: public wxNativeFontInfo{
    public:

    wxNativeFontInfo_php():wxNativeFontInfo(){}
    wxNativeFontInfo_php(const wxNativeFontInfo& info):wxNativeFontInfo(info){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxNativeFontInfo{
    wxNativeFontInfo_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxNativeFontInfo;

void php_wxNativeFontInfo_free(void *object);
zend_object* php_wxNativeFontInfo_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
ZEND_BEGIN_ARG_INFO_EX(php_wxNativeFontInfo___construct_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, info)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxNativeFontInfo_FromString_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, s)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxNativeFontInfo_FromUserString_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, s)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxNativeFontInfo_GetEncoding_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxNativeFontInfo_GetFaceName_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxNativeFontInfo_GetFamily_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxNativeFontInfo_GetPointSize_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxNativeFontInfo_GetStyle_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxNativeFontInfo_GetUnderlined_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxNativeFontInfo_GetWeight_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxNativeFontInfo_Init_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxNativeFontInfo_InitFromFont_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, font)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxNativeFontInfo_SetEncoding_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, encoding)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxNativeFontInfo_SetFaceName_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, facename)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxNativeFontInfo_SetFamily_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, family)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxNativeFontInfo_SetPointSize_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, pointsize)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxNativeFontInfo_SetStyle_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, style)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxNativeFontInfo_SetUnderlined_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, underlined)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxNativeFontInfo_SetWeight_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, weight)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxNativeFontInfo_ToString_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxNativeFontInfo_ToUserString_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()

static zend_function_entry php_wxNativeFontInfo_functions[] = {
    PHP_ME(php_wxNativeFontInfo, __construct, php_wxNativeFontInfo___construct_arg_infos, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_ME(php_wxNativeFontInfo, FromString, php_wxNativeFontInfo_FromString_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxNativeFontInfo, FromUserString, php_wxNativeFontInfo_FromUserString_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxNativeFontInfo, GetEncoding, php_wxNativeFontInfo_GetEncoding_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxNativeFontInfo, GetFaceName, php_wxNativeFontInfo_GetFaceName_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxNativeFontInfo, GetFamily, php_wxNativeFontInfo_GetFamily_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxNativeFontInfo, GetPointSize, php_wxNativeFontInfo_GetPointSize_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxNativeFontInfo, GetStyle, php_wxNativeFontInfo_GetStyle_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxNativeFontInfo, GetUnderlined, php_wxNativeFontInfo_GetUnderlined_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxNativeFontInfo, GetWeight, php_wxNativeFontInfo_GetWeight_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxNativeFontInfo, Init, php_wxNativeFontInfo_Init_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxNativeFontInfo, InitFromFont, php_wxNativeFontInfo_InitFromFont_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxNativeFontInfo, SetEncoding, php_wxNativeFontInfo_SetEncoding_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxNativeFontInfo, SetFaceName, php_wxNativeFontInfo_SetFaceName_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxNativeFontInfo, SetFamily, php_wxNativeFontInfo_SetFamily_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxNativeFontInfo, SetPointSize, php_wxNativeFontInfo_SetPointSize_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxNativeFontInfo, SetStyle, php_wxNativeFontInfo_SetStyle_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxNativeFontInfo, SetUnderlined, php_wxNativeFontInfo_SetUnderlined_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxNativeFontInfo, SetWeight, php_wxNativeFontInfo_SetWeight_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxNativeFontInfo, ToString, php_wxNativeFontInfo_ToString_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxNativeFontInfo, ToUserString, php_wxNativeFontInfo_ToUserString_arg_infos, ZEND_ACC_PUBLIC)
    PHP_FE_END
};
#endif


static inline zo_wxNativeFontInfo * php_wxNativeFontInfo_fetch_object(zend_object *obj) {
    return (zo_wxNativeFontInfo *)(
        (char *)(obj) - XtOffsetOf(zo_wxNativeFontInfo, zo)
    );
}

#define Z_wxNativeFontInfo_P(zv) \
    php_wxNativeFontInfo_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxColourDatabase_entry;
extern zend_object_handlers wxphp_wxColourDatabase_object_handlers;
void php_wxColourDatabase_destruction_handler(zend_resource*);

class wxColourDatabase_php: public wxColourDatabase{
    public:

    wxColourDatabase_php():wxColourDatabase(){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxColourDatabase{
    wxColourDatabase_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxColourDatabase;

void php_wxColourDatabase_free(void *object);
zend_object* php_wxColourDatabase_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
ZEND_BEGIN_ARG_INFO_EX(php_wxColourDatabase_AddColour_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, colourName)
    ZEND_ARG_INFO(0, colour)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxColourDatabase_Find_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, colourName)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxColourDatabase_FindName_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, colour)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxColourDatabase___construct_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()

static zend_function_entry php_wxColourDatabase_functions[] = {
    PHP_ME(php_wxColourDatabase, AddColour, php_wxColourDatabase_AddColour_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxColourDatabase, Find, php_wxColourDatabase_Find_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxColourDatabase, FindName, php_wxColourDatabase_FindName_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxColourDatabase, __construct, php_wxColourDatabase___construct_arg_infos, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxColourDatabase * php_wxColourDatabase_fetch_object(zend_object *obj) {
    return (zo_wxColourDatabase *)(
        (char *)(obj) - XtOffsetOf(zo_wxColourDatabase, zo)
    );
}

#define Z_wxColourDatabase_P(zv) \
    php_wxColourDatabase_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxGDIObject_entry;
extern zend_object_handlers wxphp_wxGDIObject_object_handlers;
void php_wxGDIObject_destruction_handler(zend_resource*);

class wxGDIObject_php: public wxGDIObject{
    public:

    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxGDIObject{
    wxGDIObject_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxGDIObject;

void php_wxGDIObject_free(void *object);
zend_object* php_wxGDIObject_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
ZEND_BEGIN_ARG_INFO_EX(php_wxGDIObject___construct_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, other)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxGDIObject_UnShare_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxGDIObject_UnRef_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxGDIObject_IsSameAs_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, obj)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxGDIObject_Ref_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, clone)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxGDIObject_GetClassInfo_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxGDIObject_IsKindOf_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, info)
ZEND_END_ARG_INFO()

static zend_function_entry php_wxGDIObject_functions[] = {
    PHP_FE_END
};
#endif


static inline zo_wxGDIObject * php_wxGDIObject_fetch_object(zend_object *obj) {
    return (zo_wxGDIObject *)(
        (char *)(obj) - XtOffsetOf(zo_wxGDIObject, zo)
    );
}

#define Z_wxGDIObject_P(zv) \
    php_wxGDIObject_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxGraphicsRenderer_entry;
extern zend_object_handlers wxphp_wxGraphicsRenderer_object_handlers;
void php_wxGraphicsRenderer_destruction_handler(zend_resource*);

class wxGraphicsRenderer_php: public wxGraphicsRenderer{
    public:

    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxGraphicsRenderer{
    wxGraphicsRenderer_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxGraphicsRenderer;

void php_wxGraphicsRenderer_free(void *object);
zend_object* php_wxGraphicsRenderer_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
ZEND_BEGIN_ARG_INFO_EX(php_wxGraphicsRenderer___construct_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, other)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxGraphicsRenderer_UnShare_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxGraphicsRenderer_UnRef_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxGraphicsRenderer_IsSameAs_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, obj)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxGraphicsRenderer_Ref_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, clone)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxGraphicsRenderer_GetClassInfo_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxGraphicsRenderer_IsKindOf_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, info)
ZEND_END_ARG_INFO()

static zend_function_entry php_wxGraphicsRenderer_functions[] = {
    PHP_FE_END
};
#endif


static inline zo_wxGraphicsRenderer * php_wxGraphicsRenderer_fetch_object(zend_object *obj) {
    return (zo_wxGraphicsRenderer *)(
        (char *)(obj) - XtOffsetOf(zo_wxGraphicsRenderer, zo)
    );
}

#define Z_wxGraphicsRenderer_P(zv) \
    php_wxGraphicsRenderer_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxGraphicsMatrix_entry;
extern zend_object_handlers wxphp_wxGraphicsMatrix_object_handlers;
void php_wxGraphicsMatrix_destruction_handler(zend_resource*);

class wxGraphicsMatrix_php: public wxGraphicsMatrix{
    public:

    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxGraphicsMatrix{
    wxGraphicsMatrix_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxGraphicsMatrix;

void php_wxGraphicsMatrix_free(void *object);
zend_object* php_wxGraphicsMatrix_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES

static zend_function_entry php_wxGraphicsMatrix_functions[] = {
    PHP_FE_END
};
#endif


static inline zo_wxGraphicsMatrix * php_wxGraphicsMatrix_fetch_object(zend_object *obj) {
    return (zo_wxGraphicsMatrix *)(
        (char *)(obj) - XtOffsetOf(zo_wxGraphicsMatrix, zo)
    );
}

#define Z_wxGraphicsMatrix_P(zv) \
    php_wxGraphicsMatrix_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxIcon_entry;
extern zend_object_handlers wxphp_wxIcon_object_handlers;
void php_wxIcon_destruction_handler(zend_resource*);

class wxIcon_php: public wxIcon{
    public:

    wxIcon_php(const wxString& name, wxBitmapType type=wxICON_DEFAULT_TYPE, int desiredWidth=-1, int desiredHeight=-1):wxIcon(name, type, desiredWidth, desiredHeight){}
    wxIcon_php(const wxIcon& icon):wxIcon(icon){}
    wxIcon_php():wxIcon(){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxIcon{
    wxIcon_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxIcon;

void php_wxIcon_free(void *object);
zend_object* php_wxIcon_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
ZEND_BEGIN_ARG_INFO_EX(php_wxIcon___construct_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, name)
    ZEND_ARG_INFO(0, type)
    ZEND_ARG_INFO(0, desiredWidth)
    ZEND_ARG_INFO(0, desiredHeight)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxIcon_SetWidth_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, width)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxIcon_SetHeight_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, height)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxIcon_SetDepth_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, depth)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxIcon_LoadFile_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, name)
    ZEND_ARG_INFO(0, type)
    ZEND_ARG_INFO(0, desiredWidth)
    ZEND_ARG_INFO(0, desiredHeight)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxIcon_IsOk_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxIcon_GetWidth_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxIcon_GetHeight_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxIcon_GetDepth_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxIcon_CopyFromBitmap_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, bmp)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxIcon_UnShare_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxIcon_UnRef_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxIcon_IsSameAs_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, obj)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxIcon_Ref_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, clone)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxIcon_GetClassInfo_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxIcon_IsKindOf_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, info)
ZEND_END_ARG_INFO()

static zend_function_entry php_wxIcon_functions[] = {
    PHP_ME(php_wxIcon, __construct, php_wxIcon___construct_arg_infos, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_ME(php_wxIcon, SetWidth, php_wxIcon_SetWidth_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxIcon, SetHeight, php_wxIcon_SetHeight_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxIcon, SetDepth, php_wxIcon_SetDepth_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxIcon, LoadFile, php_wxIcon_LoadFile_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxIcon, IsOk, php_wxIcon_IsOk_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxIcon, GetWidth, php_wxIcon_GetWidth_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxIcon, GetHeight, php_wxIcon_GetHeight_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxIcon, GetDepth, php_wxIcon_GetDepth_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxIcon, CopyFromBitmap, php_wxIcon_CopyFromBitmap_arg_infos, ZEND_ACC_PUBLIC)
    PHP_FE_END
};
#endif


static inline zo_wxIcon * php_wxIcon_fetch_object(zend_object *obj) {
    return (zo_wxIcon *)(
        (char *)(obj) - XtOffsetOf(zo_wxIcon, zo)
    );
}

#define Z_wxIcon_P(zv) \
    php_wxIcon_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxIconBundle_entry;
extern zend_object_handlers wxphp_wxIconBundle_object_handlers;
void php_wxIconBundle_destruction_handler(zend_resource*);

class wxIconBundle_php: public wxIconBundle{
    public:

    wxIconBundle_php():wxIconBundle(){}
    wxIconBundle_php(const wxString& file, wxBitmapType type=wxBITMAP_TYPE_ANY):wxIconBundle(file, type){}
    wxIconBundle_php(const wxIcon& icon):wxIconBundle(icon){}
    wxIconBundle_php(const wxIconBundle& ic):wxIconBundle(ic){}
    wxIconBundle_php(wxInputStream& stream, wxBitmapType type=wxBITMAP_TYPE_ANY):wxIconBundle(stream, type){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxIconBundle{
    wxIconBundle_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxIconBundle;

void php_wxIconBundle_free(void *object);
zend_object* php_wxIconBundle_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
ZEND_BEGIN_ARG_INFO_EX(php_wxIconBundle___construct_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, file)
    ZEND_ARG_INFO(0, type)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxIconBundle_IsEmpty_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxIconBundle_GetIconOfExactSize_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, size)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxIconBundle_GetIconCount_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxIconBundle_GetIconByIndex_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, n)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxIconBundle_AddIcon_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, file)
    ZEND_ARG_INFO(0, type)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxIconBundle_GetIcon_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, size)
    ZEND_ARG_INFO(0, flags)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxIconBundle_UnShare_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxIconBundle_UnRef_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxIconBundle_IsSameAs_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, obj)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxIconBundle_Ref_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, clone)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxIconBundle_GetClassInfo_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxIconBundle_IsKindOf_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, info)
ZEND_END_ARG_INFO()

static zend_function_entry php_wxIconBundle_functions[] = {
    PHP_ME(php_wxIconBundle, __construct, php_wxIconBundle___construct_arg_infos, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_ME(php_wxIconBundle, IsEmpty, php_wxIconBundle_IsEmpty_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxIconBundle, GetIconOfExactSize, php_wxIconBundle_GetIconOfExactSize_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxIconBundle, GetIconCount, php_wxIconBundle_GetIconCount_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxIconBundle, GetIconByIndex, php_wxIconBundle_GetIconByIndex_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxIconBundle, AddIcon, php_wxIconBundle_AddIcon_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxIconBundle, GetIcon, php_wxIconBundle_GetIcon_arg_infos, ZEND_ACC_PUBLIC)
    PHP_FE_END
};
#endif


static inline zo_wxIconBundle * php_wxIconBundle_fetch_object(zend_object *obj) {
    return (zo_wxIconBundle *)(
        (char *)(obj) - XtOffsetOf(zo_wxIconBundle, zo)
    );
}

#define Z_wxIconBundle_P(zv) \
    php_wxIconBundle_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxImageHandler_entry;
extern zend_object_handlers wxphp_wxImageHandler_object_handlers;
void php_wxImageHandler_destruction_handler(zend_resource*);

class wxImageHandler_php: public wxImageHandler{
    public:

    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxImageHandler{
    wxImageHandler_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxImageHandler;

void php_wxImageHandler_free(void *object);
zend_object* php_wxImageHandler_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
ZEND_BEGIN_ARG_INFO_EX(php_wxImageHandler_CanRead_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, stream)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImageHandler_GetAltExtensions_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImageHandler_GetExtension_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImageHandler_GetImageCount_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, stream)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImageHandler_GetMimeType_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImageHandler_GetName_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImageHandler_GetType_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImageHandler_LoadFile_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, image)
    ZEND_ARG_INFO(0, stream)
    ZEND_ARG_INFO(0, verbose)
    ZEND_ARG_INFO(0, index)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImageHandler_SaveFile_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, image)
    ZEND_ARG_INFO(0, stream)
    ZEND_ARG_INFO(0, verbose)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImageHandler_SetAltExtensions_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, extensions)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImageHandler_SetExtension_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, extension)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImageHandler_SetMimeType_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, mimetype)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImageHandler_SetName_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, name)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImageHandler___construct_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, other)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImageHandler_UnShare_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImageHandler_UnRef_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImageHandler_IsSameAs_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, obj)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImageHandler_Ref_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, clone)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImageHandler_GetClassInfo_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImageHandler_IsKindOf_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, info)
ZEND_END_ARG_INFO()

static zend_function_entry php_wxImageHandler_functions[] = {
    PHP_ME(php_wxImageHandler, CanRead, php_wxImageHandler_CanRead_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImageHandler, GetAltExtensions, php_wxImageHandler_GetAltExtensions_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImageHandler, GetExtension, php_wxImageHandler_GetExtension_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImageHandler, GetImageCount, php_wxImageHandler_GetImageCount_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImageHandler, GetMimeType, php_wxImageHandler_GetMimeType_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImageHandler, GetName, php_wxImageHandler_GetName_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImageHandler, GetType, php_wxImageHandler_GetType_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImageHandler, LoadFile, php_wxImageHandler_LoadFile_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImageHandler, SaveFile, php_wxImageHandler_SaveFile_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImageHandler, SetAltExtensions, php_wxImageHandler_SetAltExtensions_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImageHandler, SetExtension, php_wxImageHandler_SetExtension_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImageHandler, SetMimeType, php_wxImageHandler_SetMimeType_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImageHandler, SetName, php_wxImageHandler_SetName_arg_infos, ZEND_ACC_PUBLIC)
    PHP_FE_END
};
#endif


static inline zo_wxImageHandler * php_wxImageHandler_fetch_object(zend_object *obj) {
    return (zo_wxImageHandler *)(
        (char *)(obj) - XtOffsetOf(zo_wxImageHandler, zo)
    );
}

#define Z_wxImageHandler_P(zv) \
    php_wxImageHandler_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxImage_entry;
extern zend_object_handlers wxphp_wxImage_object_handlers;
void php_wxImage_destruction_handler(zend_resource*);

class wxImage_php: public wxImage{
    public:

    wxImage_php(int width, int height, bool clear=true):wxImage(width, height, clear){}
    wxImage_php():wxImage(){}
    wxImage_php(const wxSize& sz, bool clear=true):wxImage(sz, clear){}
    wxImage_php(const wxString& name, wxBitmapType type=wxBITMAP_TYPE_ANY, int index=-1):wxImage(name, type, index){}
    wxImage_php(const wxString& name, const wxString& mimetype, int index=-1):wxImage(name, mimetype, index){}
    wxImage_php(wxInputStream& stream, wxBitmapType type=wxBITMAP_TYPE_ANY, int index=-1):wxImage(stream, type, index){}
    wxImage_php(wxInputStream& stream, const wxString& mimetype, int index=-1):wxImage(stream, mimetype, index){}
    wxImage_php(const wxSize& sz, unsigned char* data, unsigned char* alpha, bool static_data=false):wxImage(sz, data, alpha, static_data){}
    wxImage_php(int width, int height, unsigned char* data, unsigned char* alpha, bool static_data=false):wxImage(width, height, data, alpha, static_data){}
    wxImage_php(const wxSize& sz, unsigned char* data, bool static_data=false):wxImage(sz, data, static_data){}
    wxImage_php(int width, int height, unsigned char* data, bool static_data=false):wxImage(width, height, data, static_data){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxImage{
    wxImage_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxImage;

void php_wxImage_free(void *object);
zend_object* php_wxImage_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
ZEND_BEGIN_ARG_INFO_EX(php_wxImage___construct_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, width)
    ZEND_ARG_INFO(0, height)
    ZEND_ARG_INFO(0, data)
    ZEND_ARG_INFO(0, alpha)
    ZEND_ARG_INFO(0, static_data)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImage_SetType_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, type)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImage_SetRGB_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, rect)
    ZEND_ARG_INFO(0, red)
    ZEND_ARG_INFO(0, green)
    ZEND_ARG_INFO(0, blue)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImage_SetPalette_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, palette)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImage_SetOption_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, name)
    ZEND_ARG_INFO(0, value)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImage_SetMaskFromImage_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, mask)
    ZEND_ARG_INFO(0, mr)
    ZEND_ARG_INFO(0, mg)
    ZEND_ARG_INFO(0, mb)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImage_SetMaskColour_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, red)
    ZEND_ARG_INFO(0, green)
    ZEND_ARG_INFO(0, blue)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImage_SetMask_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, hasMask)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImage_SetData_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, data)
    ZEND_ARG_INFO(0, new_width)
    ZEND_ARG_INFO(0, new_height)
    ZEND_ARG_INFO(0, static_data)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImage_SetAlpha_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, x)
    ZEND_ARG_INFO(0, y)
    ZEND_ARG_INFO(0, alpha)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImage_Scale_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, width)
    ZEND_ARG_INFO(0, height)
    ZEND_ARG_INFO(0, quality)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImage_SaveFile_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, stream)
    ZEND_ARG_INFO(0, type)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImage_RotateHue_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, angle)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImage_Rotate90_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, clockwise)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImage_Rotate180_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImage_Rotate_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, angle)
    ZEND_ARG_INFO(0, rotationCentre)
    ZEND_ARG_INFO(0, interpolating)
    ZEND_ARG_INFO(0, offsetAfterRotation)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImage_Resize_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, size)
    ZEND_ARG_INFO(0, pos)
    ZEND_ARG_INFO(0, red)
    ZEND_ARG_INFO(0, green)
    ZEND_ARG_INFO(0, blue)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImage_Rescale_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, width)
    ZEND_ARG_INFO(0, height)
    ZEND_ARG_INFO(0, quality)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImage_Replace_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, r1)
    ZEND_ARG_INFO(0, g1)
    ZEND_ARG_INFO(0, b1)
    ZEND_ARG_INFO(0, r2)
    ZEND_ARG_INFO(0, g2)
    ZEND_ARG_INFO(0, b2)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImage_RemoveHandler_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, name)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImage_Paste_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, image)
    ZEND_ARG_INFO(0, x)
    ZEND_ARG_INFO(0, y)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImage_Mirror_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, horizontally)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImage_LoadFile_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, stream)
    ZEND_ARG_INFO(0, mimetype)
    ZEND_ARG_INFO(0, index)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImage_IsTransparent_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, x)
    ZEND_ARG_INFO(0, y)
    ZEND_ARG_INFO(0, threshold)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImage_IsOk_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImage_InsertHandler_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, handler)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImage_InitStandardHandlers_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImage_InitAlpha_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImage_HasOption_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, name)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImage_HasMask_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImage_HasAlpha_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImage_GetWidth_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImage_GetType_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImage_GetSubImage_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, rect)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImage_GetSize_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImage_GetRed_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, x)
    ZEND_ARG_INFO(0, y)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImage_GetPalette_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImage_GetOrFindMaskColour_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, r)
    ZEND_ARG_INFO(0, g)
    ZEND_ARG_INFO(0, b)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImage_GetOptionInt_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, name)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImage_GetOption_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, name)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImage_GetMaskRed_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImage_GetMaskGreen_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImage_GetMaskBlue_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImage_GetImageExtWildcard_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImage_GetImageCount_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, stream)
    ZEND_ARG_INFO(0, type)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImage_GetHeight_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImage_GetGreen_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, x)
    ZEND_ARG_INFO(0, y)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImage_GetData_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImage_GetBlue_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, x)
    ZEND_ARG_INFO(0, y)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImage_GetAlpha_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, x)
    ZEND_ARG_INFO(0, y)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImage_FindHandlerMime_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, mimetype)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImage_FindHandler_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, extension)
    ZEND_ARG_INFO(0, imageType)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImage_FindFirstUnusedColour_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, r)
    ZEND_ARG_INFO(0, g)
    ZEND_ARG_INFO(0, b)
    ZEND_ARG_INFO(0, startR)
    ZEND_ARG_INFO(0, startG)
    ZEND_ARG_INFO(0, startB)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImage_Destroy_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImage_Create_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, width)
    ZEND_ARG_INFO(0, height)
    ZEND_ARG_INFO(0, data)
    ZEND_ARG_INFO(0, alpha)
    ZEND_ARG_INFO(0, static_data)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImage_Copy_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImage_ConvertToMono_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, r)
    ZEND_ARG_INFO(0, g)
    ZEND_ARG_INFO(0, b)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImage_ConvertToGreyscale_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, weight_r)
    ZEND_ARG_INFO(0, weight_g)
    ZEND_ARG_INFO(0, weight_b)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImage_ConvertToDisabled_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, brightness)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImage_ConvertAlphaToMask_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, mr)
    ZEND_ARG_INFO(0, mg)
    ZEND_ARG_INFO(0, mb)
    ZEND_ARG_INFO(0, threshold)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImage_ClearAlpha_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImage_Clear_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, value)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImage_CleanUpHandlers_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImage_CanRead_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, stream)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImage_BlurVertical_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, blurRadius)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImage_BlurHorizontal_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, blurRadius)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImage_Blur_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, blurRadius)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImage_AddHandler_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, handler)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImage_Size_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, size)
    ZEND_ARG_INFO(0, pos)
    ZEND_ARG_INFO(0, red)
    ZEND_ARG_INFO(0, green)
    ZEND_ARG_INFO(0, blue)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImage_UnShare_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImage_UnRef_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImage_IsSameAs_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, obj)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImage_Ref_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, clone)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImage_GetClassInfo_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImage_IsKindOf_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, info)
ZEND_END_ARG_INFO()

static zend_function_entry php_wxImage_functions[] = {
    PHP_ME(php_wxImage, __construct, php_wxImage___construct_arg_infos, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_ME(php_wxImage, SetType, php_wxImage_SetType_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImage, SetRGB, php_wxImage_SetRGB_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImage, SetPalette, php_wxImage_SetPalette_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImage, SetOption, php_wxImage_SetOption_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImage, SetMaskFromImage, php_wxImage_SetMaskFromImage_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImage, SetMaskColour, php_wxImage_SetMaskColour_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImage, SetMask, php_wxImage_SetMask_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImage, SetData, php_wxImage_SetData_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImage, SetAlpha, php_wxImage_SetAlpha_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImage, Scale, php_wxImage_Scale_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImage, SaveFile, php_wxImage_SaveFile_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImage, RotateHue, php_wxImage_RotateHue_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImage, Rotate90, php_wxImage_Rotate90_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImage, Rotate180, php_wxImage_Rotate180_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImage, Rotate, php_wxImage_Rotate_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImage, Resize, php_wxImage_Resize_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImage, Rescale, php_wxImage_Rescale_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImage, Replace, php_wxImage_Replace_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImage, RemoveHandler, php_wxImage_RemoveHandler_arg_infos, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImage, Paste, php_wxImage_Paste_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImage, Mirror, php_wxImage_Mirror_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImage, LoadFile, php_wxImage_LoadFile_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImage, IsTransparent, php_wxImage_IsTransparent_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImage, IsOk, php_wxImage_IsOk_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImage, InsertHandler, php_wxImage_InsertHandler_arg_infos, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImage, InitStandardHandlers, php_wxImage_InitStandardHandlers_arg_infos, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImage, InitAlpha, php_wxImage_InitAlpha_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImage, HasOption, php_wxImage_HasOption_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImage, HasMask, php_wxImage_HasMask_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImage, HasAlpha, php_wxImage_HasAlpha_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImage, GetWidth, php_wxImage_GetWidth_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImage, GetType, php_wxImage_GetType_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImage, GetSubImage, php_wxImage_GetSubImage_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImage, GetSize, php_wxImage_GetSize_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImage, GetRed, php_wxImage_GetRed_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImage, GetPalette, php_wxImage_GetPalette_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImage, GetOrFindMaskColour, php_wxImage_GetOrFindMaskColour_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImage, GetOptionInt, php_wxImage_GetOptionInt_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImage, GetOption, php_wxImage_GetOption_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImage, GetMaskRed, php_wxImage_GetMaskRed_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImage, GetMaskGreen, php_wxImage_GetMaskGreen_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImage, GetMaskBlue, php_wxImage_GetMaskBlue_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImage, GetImageExtWildcard, php_wxImage_GetImageExtWildcard_arg_infos, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImage, GetImageCount, php_wxImage_GetImageCount_arg_infos, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImage, GetHeight, php_wxImage_GetHeight_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImage, GetGreen, php_wxImage_GetGreen_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImage, GetData, php_wxImage_GetData_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImage, GetBlue, php_wxImage_GetBlue_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImage, GetAlpha, php_wxImage_GetAlpha_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImage, FindHandlerMime, php_wxImage_FindHandlerMime_arg_infos, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImage, FindHandler, php_wxImage_FindHandler_arg_infos, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImage, FindFirstUnusedColour, php_wxImage_FindFirstUnusedColour_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImage, Destroy, php_wxImage_Destroy_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImage, Create, php_wxImage_Create_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImage, Copy, php_wxImage_Copy_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImage, ConvertToMono, php_wxImage_ConvertToMono_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImage, ConvertToGreyscale, php_wxImage_ConvertToGreyscale_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImage, ConvertToDisabled, php_wxImage_ConvertToDisabled_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImage, ConvertAlphaToMask, php_wxImage_ConvertAlphaToMask_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImage, ClearAlpha, php_wxImage_ClearAlpha_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImage, Clear, php_wxImage_Clear_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImage, CleanUpHandlers, php_wxImage_CleanUpHandlers_arg_infos, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImage, CanRead, php_wxImage_CanRead_arg_infos, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImage, BlurVertical, php_wxImage_BlurVertical_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImage, BlurHorizontal, php_wxImage_BlurHorizontal_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImage, Blur, php_wxImage_Blur_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImage, AddHandler, php_wxImage_AddHandler_arg_infos, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImage, Size, php_wxImage_Size_arg_infos, ZEND_ACC_PUBLIC)
    PHP_FE_END
};
#endif


static inline zo_wxImage * php_wxImage_fetch_object(zend_object *obj) {
    return (zo_wxImage *)(
        (char *)(obj) - XtOffsetOf(zo_wxImage, zo)
    );
}

#define Z_wxImage_P(zv) \
    php_wxImage_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxImageList_entry;
extern zend_object_handlers wxphp_wxImageList_object_handlers;
void php_wxImageList_destruction_handler(zend_resource*);

class wxImageList_php: public wxImageList{
    public:

    wxImageList_php():wxImageList(){}
    wxImageList_php(int width, int height, bool mask=true, int initialCount=1):wxImageList(width, height, mask, initialCount){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxImageList{
    wxImageList_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxImageList;

void php_wxImageList_free(void *object);
zend_object* php_wxImageList_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
ZEND_BEGIN_ARG_INFO_EX(php_wxImageList_Add_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, bitmap)
    ZEND_ARG_INFO(0, mask)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImageList_Create_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, width)
    ZEND_ARG_INFO(0, height)
    ZEND_ARG_INFO(0, mask)
    ZEND_ARG_INFO(0, initialCount)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImageList_GetBitmap_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, index)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImageList_GetIcon_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, index)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImageList_GetImageCount_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImageList_GetSize_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, index)
    ZEND_ARG_INFO(0, width)
    ZEND_ARG_INFO(0, height)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImageList_Remove_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, index)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImageList_RemoveAll_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImageList_Replace_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, index)
    ZEND_ARG_INFO(0, bitmap)
    ZEND_ARG_INFO(0, mask)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImageList___construct_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, width)
    ZEND_ARG_INFO(0, height)
    ZEND_ARG_INFO(0, mask)
    ZEND_ARG_INFO(0, initialCount)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImageList_Draw_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, index)
    ZEND_ARG_INFO(0, dc)
    ZEND_ARG_INFO(0, x)
    ZEND_ARG_INFO(0, y)
    ZEND_ARG_INFO(0, flags)
    ZEND_ARG_INFO(0, solidBackground)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImageList_UnShare_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImageList_UnRef_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImageList_IsSameAs_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, obj)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImageList_Ref_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, clone)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImageList_GetClassInfo_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxImageList_IsKindOf_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, info)
ZEND_END_ARG_INFO()

static zend_function_entry php_wxImageList_functions[] = {
    PHP_ME(php_wxImageList, Add, php_wxImageList_Add_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImageList, Create, php_wxImageList_Create_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImageList, GetBitmap, php_wxImageList_GetBitmap_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImageList, GetIcon, php_wxImageList_GetIcon_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImageList, GetImageCount, php_wxImageList_GetImageCount_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImageList, GetSize, php_wxImageList_GetSize_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImageList, Remove, php_wxImageList_Remove_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImageList, RemoveAll, php_wxImageList_RemoveAll_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImageList, Replace, php_wxImageList_Replace_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxImageList, __construct, php_wxImageList___construct_arg_infos, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_ME(php_wxImageList, Draw, php_wxImageList_Draw_arg_infos, ZEND_ACC_PUBLIC)
    PHP_FE_END
};
#endif


static inline zo_wxImageList * php_wxImageList_fetch_object(zend_object *obj) {
    return (zo_wxImageList *)(
        (char *)(obj) - XtOffsetOf(zo_wxImageList, zo)
    );
}

#define Z_wxImageList_P(zv) \
    php_wxImageList_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxPalette_entry;
extern zend_object_handlers wxphp_wxPalette_object_handlers;
void php_wxPalette_destruction_handler(zend_resource*);

class wxPalette_php: public wxPalette{
    public:

    wxPalette_php():wxPalette(){}
    wxPalette_php(const wxPalette& palette):wxPalette(palette){}
    wxPalette_php(int n, const unsigned char* red, const unsigned char* green, const unsigned char* blue):wxPalette(n, red, green, blue){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxPalette{
    wxPalette_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxPalette;

void php_wxPalette_free(void *object);
zend_object* php_wxPalette_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
ZEND_BEGIN_ARG_INFO_EX(php_wxPalette___construct_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, n)
    ZEND_ARG_INFO(0, red)
    ZEND_ARG_INFO(0, green)
    ZEND_ARG_INFO(0, blue)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxPalette_IsOk_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxPalette_GetPixel_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, red)
    ZEND_ARG_INFO(0, green)
    ZEND_ARG_INFO(0, blue)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxPalette_GetColoursCount_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxPalette_Create_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, n)
    ZEND_ARG_INFO(0, red)
    ZEND_ARG_INFO(0, green)
    ZEND_ARG_INFO(0, blue)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxPalette_GetRGB_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, pixel)
    ZEND_ARG_INFO(0, red)
    ZEND_ARG_INFO(0, green)
    ZEND_ARG_INFO(0, blue)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxPalette_UnShare_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxPalette_UnRef_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxPalette_IsSameAs_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, obj)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxPalette_Ref_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, clone)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxPalette_GetClassInfo_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxPalette_IsKindOf_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, info)
ZEND_END_ARG_INFO()

static zend_function_entry php_wxPalette_functions[] = {
    PHP_ME(php_wxPalette, __construct, php_wxPalette___construct_arg_infos, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_ME(php_wxPalette, IsOk, php_wxPalette_IsOk_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxPalette, GetPixel, php_wxPalette_GetPixel_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxPalette, GetColoursCount, php_wxPalette_GetColoursCount_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxPalette, Create, php_wxPalette_Create_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxPalette, GetRGB, php_wxPalette_GetRGB_arg_infos, ZEND_ACC_PUBLIC)
    PHP_FE_END
};
#endif


static inline zo_wxPalette * php_wxPalette_fetch_object(zend_object *obj) {
    return (zo_wxPalette *)(
        (char *)(obj) - XtOffsetOf(zo_wxPalette, zo)
    );
}

#define Z_wxPalette_P(zv) \
    php_wxPalette_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxPen_entry;
extern zend_object_handlers wxphp_wxPen_object_handlers;
void php_wxPen_destruction_handler(zend_resource*);

class wxPen_php: public wxPen{
    public:

    wxPen_php():wxPen(){}
    wxPen_php(const wxColour& colour, int width=1, wxPenStyle style=wxPENSTYLE_SOLID):wxPen(colour, width, style){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxPen{
    wxPen_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxPen;

void php_wxPen_free(void *object);
zend_object* php_wxPen_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
ZEND_BEGIN_ARG_INFO_EX(php_wxPen___construct_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, colour)
    ZEND_ARG_INFO(0, width)
    ZEND_ARG_INFO(0, style)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxPen_IsTransparent_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxPen_IsOk_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxPen_IsNonTransparent_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxPen_GetWidth_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxPen_GetStyle_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxPen_GetStipple_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxPen_GetJoin_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxPen_GetColour_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxPen_GetCap_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxPen_SetColour_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, red)
    ZEND_ARG_INFO(0, green)
    ZEND_ARG_INFO(0, blue)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxPen_SetJoin_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, join_style)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxPen_SetStipple_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, stipple)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxPen_SetStyle_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, style)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxPen_SetWidth_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, width)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxPen_SetCap_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, capStyle)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxPen_UnShare_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxPen_UnRef_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxPen_IsSameAs_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, obj)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxPen_Ref_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, clone)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxPen_GetClassInfo_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxPen_IsKindOf_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, info)
ZEND_END_ARG_INFO()

static zend_function_entry php_wxPen_functions[] = {
    PHP_ME(php_wxPen, __construct, php_wxPen___construct_arg_infos, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_ME(php_wxPen, IsTransparent, php_wxPen_IsTransparent_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxPen, IsOk, php_wxPen_IsOk_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxPen, IsNonTransparent, php_wxPen_IsNonTransparent_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxPen, GetWidth, php_wxPen_GetWidth_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxPen, GetStyle, php_wxPen_GetStyle_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxPen, GetStipple, php_wxPen_GetStipple_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxPen, GetJoin, php_wxPen_GetJoin_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxPen, GetColour, php_wxPen_GetColour_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxPen, GetCap, php_wxPen_GetCap_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxPen, SetColour, php_wxPen_SetColour_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxPen, SetJoin, php_wxPen_SetJoin_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxPen, SetStipple, php_wxPen_SetStipple_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxPen, SetStyle, php_wxPen_SetStyle_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxPen, SetWidth, php_wxPen_SetWidth_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxPen, SetCap, php_wxPen_SetCap_arg_infos, ZEND_ACC_PUBLIC)
    PHP_FE_END
};
#endif


static inline zo_wxPen * php_wxPen_fetch_object(zend_object *obj) {
    return (zo_wxPen *)(
        (char *)(obj) - XtOffsetOf(zo_wxPen, zo)
    );
}

#define Z_wxPen_P(zv) \
    php_wxPen_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxPenList_entry;
extern zend_object_handlers wxphp_wxPenList_object_handlers;
void php_wxPenList_destruction_handler(zend_resource*);

class wxPenList_php: public wxPenList{
    public:

    wxPenList_php():wxPenList(){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxPenList{
    wxPenList_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxPenList;

void php_wxPenList_free(void *object);
zend_object* php_wxPenList_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
ZEND_BEGIN_ARG_INFO_EX(php_wxPenList_FindOrCreatePen_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, colour)
    ZEND_ARG_INFO(0, width)
    ZEND_ARG_INFO(0, style)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxPenList___construct_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()

static zend_function_entry php_wxPenList_functions[] = {
    PHP_ME(php_wxPenList, FindOrCreatePen, php_wxPenList_FindOrCreatePen_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxPenList, __construct, php_wxPenList___construct_arg_infos, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxPenList * php_wxPenList_fetch_object(zend_object *obj) {
    return (zo_wxPenList *)(
        (char *)(obj) - XtOffsetOf(zo_wxPenList, zo)
    );
}

#define Z_wxPenList_P(zv) \
    php_wxPenList_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxRendererNative_entry;
extern zend_object_handlers wxphp_wxRendererNative_object_handlers;
void php_wxRendererNative_destruction_handler(zend_resource*);

class wxRendererNative_php: public wxRendererNative{
    public:

    
    void DrawCheckBox(wxWindow* win, wxDC& dc, const wxRect& rect, int flags=0);
    void DrawChoice(wxWindow* win, wxDC& dc, const wxRect& rect, int flags=0);
    void DrawComboBox(wxWindow* win, wxDC& dc, const wxRect& rect, int flags=0);
    void DrawComboBoxDropButton(wxWindow* win, wxDC& dc, const wxRect& rect, int flags=0);
    void DrawDropArrow(wxWindow* win, wxDC& dc, const wxRect& rect, int flags=0);
    void DrawFocusRect(wxWindow* win, wxDC& dc, const wxRect& rect, int flags=0);
    void DrawPushButton(wxWindow* win, wxDC& dc, const wxRect& rect, int flags=0);
    void DrawItemSelectionRect(wxWindow* win, wxDC& dc, const wxRect& rect, int flags=0);
    void DrawRadioBitmap(wxWindow* win, wxDC& dc, const wxRect& rect, int flags=0);
    void DrawSplitterBorder(wxWindow* win, wxDC& dc, const wxRect& rect, int flags=0);
    void DrawSplitterSash(wxWindow* win, wxDC& dc, const wxSize& size, wxCoord position, wxOrientation orient, int flags=0);
    void DrawTextCtrl(wxWindow* win, wxDC& dc, const wxRect& rect, int flags=0);
    void DrawTreeItemButton(wxWindow* win, wxDC& dc, const wxRect& rect, int flags=0);
    wxSize GetCheckBoxSize(wxWindow* win);
    int GetHeaderButtonHeight(wxWindow* win);
    int GetHeaderButtonMargin(wxWindow* win);
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxRendererNative{
    wxRendererNative_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxRendererNative;

void php_wxRendererNative_free(void *object);
zend_object* php_wxRendererNative_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
ZEND_BEGIN_ARG_INFO_EX(php_wxRendererNative_Get_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxRendererNative_GetDefault_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxRendererNative_GetGeneric_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxRendererNative_Load_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, name)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxRendererNative_Set_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, renderer)
ZEND_END_ARG_INFO()

static zend_function_entry php_wxRendererNative_functions[] = {
    PHP_ME(php_wxRendererNative, Get, php_wxRendererNative_Get_arg_infos, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
    PHP_ME(php_wxRendererNative, GetDefault, php_wxRendererNative_GetDefault_arg_infos, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
    PHP_ME(php_wxRendererNative, GetGeneric, php_wxRendererNative_GetGeneric_arg_infos, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
    PHP_ME(php_wxRendererNative, Load, php_wxRendererNative_Load_arg_infos, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
    PHP_ME(php_wxRendererNative, Set, php_wxRendererNative_Set_arg_infos, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
    PHP_FE_END
};
#endif


static inline zo_wxRendererNative * php_wxRendererNative_fetch_object(zend_object *obj) {
    return (zo_wxRendererNative *)(
        (char *)(obj) - XtOffsetOf(zo_wxRendererNative, zo)
    );
}

#define Z_wxRendererNative_P(zv) \
    php_wxRendererNative_fetch_object(Z_OBJ_P(zv))
#endif //WXPHP_GDI_H_GUARD
