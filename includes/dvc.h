/*
 * @author Mário Soares
 * @contributors Jefferson González
 * @contributors René Vögeli / Rangee GmbH
 * 
 * @license 
 * This file is part of wxPHP check the LICENSE file for information.
 * 
 * @note
 * This file was auto-generated by the wxPHP source maker
*/

#ifndef WXPHP_DVC_H_GUARD
#define WXPHP_DVC_H_GUARD

#include "references.h"
#include "object_types.h"
#include "arginfo_void.h"

ZEND_BEGIN_ARG_INFO_EX(wxphp_dvc_get_args, 0, 0, 1)
    ZEND_ARG_INFO(0, name)
ZEND_END_ARG_INFO()

extern zend_class_entry* php_wxDataViewChoiceRenderer_entry;
extern zend_object_handlers wxphp_wxDataViewChoiceRenderer_object_handlers;
void php_wxDataViewChoiceRenderer_destruction_handler(zend_resource*);

class wxDataViewChoiceRenderer_php: public wxDataViewChoiceRenderer{
    public:

    wxDataViewChoiceRenderer_php(const wxArrayString& choices, wxDataViewCellMode mode=wxDATAVIEW_CELL_EDITABLE, int alignment=wxDVR_DEFAULT_ALIGNMENT):wxDataViewChoiceRenderer(choices, mode, alignment){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxDataViewChoiceRenderer{
    wxDataViewChoiceRenderer_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxDataViewChoiceRenderer;

void php_wxDataViewChoiceRenderer_free(void *object);
zend_object* php_wxDataViewChoiceRenderer_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxDataViewChoiceRenderer_functions[] = {
    PHP_ME(php_wxDataViewChoiceRenderer, GetChoice, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewChoiceRenderer, GetChoices, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewChoiceRenderer, __construct, arginfo_void, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxDataViewChoiceRenderer * php_wxDataViewChoiceRenderer_fetch_object(zend_object *obj) {
    return (zo_wxDataViewChoiceRenderer *)(
        (char *)(obj) - XtOffsetOf(zo_wxDataViewChoiceRenderer, zo)
    );
}

#define Z_wxDataViewChoiceRenderer_P(zv) \
    php_wxDataViewChoiceRenderer_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxDataViewModel_entry;
extern zend_object_handlers wxphp_wxDataViewModel_object_handlers;
void php_wxDataViewModel_destruction_handler(zend_resource*);

class wxDataViewModel_php: public wxDataViewModel{
    public:

    
    unsigned int GetColumnCount() const;
    wxString GetColumnType(unsigned int col) const;
    wxDataViewItem GetParent(const wxDataViewItem& item) const;
    void GetValue(wxVariant& variant, const wxDataViewItem& item, unsigned int col) const;
    bool IsContainer(const wxDataViewItem& item) const;
    bool SetValue(const wxVariant& variant, const wxDataViewItem& item, unsigned int col);
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxDataViewModel{
    wxDataViewModel_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxDataViewModel;

void php_wxDataViewModel_free(void *object);
zend_object* php_wxDataViewModel_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxDataViewModel_functions[] = {
    PHP_ME(php_wxDataViewModel, AddNotifier, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewModel, ChangeValue, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewModel, Cleared, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewModel, Compare, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewModel, GetAttr, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewModel, HasContainerColumns, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewModel, HasDefaultCompare, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewModel, HasValue, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewModel, IsEnabled, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewModel, ItemAdded, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewModel, ItemChanged, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewModel, ItemDeleted, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewModel, RemoveNotifier, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewModel, Resort, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewModel, ValueChanged, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_FE_END
};
#endif


static inline zo_wxDataViewModel * php_wxDataViewModel_fetch_object(zend_object *obj) {
    return (zo_wxDataViewModel *)(
        (char *)(obj) - XtOffsetOf(zo_wxDataViewModel, zo)
    );
}

#define Z_wxDataViewModel_P(zv) \
    php_wxDataViewModel_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxDataViewListModel_entry;
extern zend_object_handlers wxphp_wxDataViewListModel_object_handlers;
void php_wxDataViewListModel_destruction_handler(zend_resource*);

class wxDataViewListModel_php: public wxDataViewListModel{
    public:

    
    void GetValueByRow(wxVariant& variant, unsigned int row, unsigned int col) const;
    unsigned int GetCount() const;
    unsigned int GetRow(const wxDataViewItem& item) const;
    bool SetValueByRow(const wxVariant& variant, unsigned int row, unsigned int col);
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxDataViewListModel{
    wxDataViewListModel_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxDataViewListModel;

void php_wxDataViewListModel_free(void *object);
zend_object* php_wxDataViewListModel_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxDataViewListModel_functions[] = {
    PHP_ME(php_wxDataViewListModel, GetAttrByRow, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewListModel, IsEnabledByRow, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_FE_END
};
#endif


static inline zo_wxDataViewListModel * php_wxDataViewListModel_fetch_object(zend_object *obj) {
    return (zo_wxDataViewListModel *)(
        (char *)(obj) - XtOffsetOf(zo_wxDataViewListModel, zo)
    );
}

#define Z_wxDataViewListModel_P(zv) \
    php_wxDataViewListModel_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxDataViewIndexListModel_entry;
extern zend_object_handlers wxphp_wxDataViewIndexListModel_object_handlers;
void php_wxDataViewIndexListModel_destruction_handler(zend_resource*);

class wxDataViewIndexListModel_php: public wxDataViewIndexListModel{
    public:

    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxDataViewIndexListModel{
    wxDataViewIndexListModel_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxDataViewIndexListModel;

void php_wxDataViewIndexListModel_free(void *object);
zend_object* php_wxDataViewIndexListModel_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxDataViewIndexListModel_functions[] = {
    PHP_FE_END
};
#endif


static inline zo_wxDataViewIndexListModel * php_wxDataViewIndexListModel_fetch_object(zend_object *obj) {
    return (zo_wxDataViewIndexListModel *)(
        (char *)(obj) - XtOffsetOf(zo_wxDataViewIndexListModel, zo)
    );
}

#define Z_wxDataViewIndexListModel_P(zv) \
    php_wxDataViewIndexListModel_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxDataViewVirtualListModel_entry;
extern zend_object_handlers wxphp_wxDataViewVirtualListModel_object_handlers;
void php_wxDataViewVirtualListModel_destruction_handler(zend_resource*);

class wxDataViewVirtualListModel_php: public wxDataViewVirtualListModel{
    public:

    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxDataViewVirtualListModel{
    wxDataViewVirtualListModel_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxDataViewVirtualListModel;

void php_wxDataViewVirtualListModel_free(void *object);
zend_object* php_wxDataViewVirtualListModel_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxDataViewVirtualListModel_functions[] = {
    PHP_FE_END
};
#endif


static inline zo_wxDataViewVirtualListModel * php_wxDataViewVirtualListModel_fetch_object(zend_object *obj) {
    return (zo_wxDataViewVirtualListModel *)(
        (char *)(obj) - XtOffsetOf(zo_wxDataViewVirtualListModel, zo)
    );
}

#define Z_wxDataViewVirtualListModel_P(zv) \
    php_wxDataViewVirtualListModel_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxDataViewItemAttr_entry;
extern zend_object_handlers wxphp_wxDataViewItemAttr_object_handlers;
void php_wxDataViewItemAttr_destruction_handler(zend_resource*);

class wxDataViewItemAttr_php: public wxDataViewItemAttr{
    public:

    wxDataViewItemAttr_php():wxDataViewItemAttr(){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxDataViewItemAttr{
    wxDataViewItemAttr_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxDataViewItemAttr;

void php_wxDataViewItemAttr_free(void *object);
zend_object* php_wxDataViewItemAttr_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxDataViewItemAttr_functions[] = {
    PHP_ME(php_wxDataViewItemAttr, SetBold, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewItemAttr, SetColour, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewItemAttr, SetItalic, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewItemAttr, __construct, arginfo_void, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxDataViewItemAttr * php_wxDataViewItemAttr_fetch_object(zend_object *obj) {
    return (zo_wxDataViewItemAttr *)(
        (char *)(obj) - XtOffsetOf(zo_wxDataViewItemAttr, zo)
    );
}

#define Z_wxDataViewItemAttr_P(zv) \
    php_wxDataViewItemAttr_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxDataViewItem_entry;
extern zend_object_handlers wxphp_wxDataViewItem_object_handlers;
void php_wxDataViewItem_destruction_handler(zend_resource*);

class wxDataViewItem_php: public wxDataViewItem{
    public:

    wxDataViewItem_php():wxDataViewItem(){}
    wxDataViewItem_php(const wxDataViewItem& item):wxDataViewItem(item){}
    wxDataViewItem_php(void* id):wxDataViewItem(id){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxDataViewItem{
    wxDataViewItem_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxDataViewItem;

void php_wxDataViewItem_free(void *object);
zend_object* php_wxDataViewItem_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxDataViewItem_functions[] = {
    PHP_ME(php_wxDataViewItem, GetID, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewItem, IsOk, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewItem, __construct, arginfo_void, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxDataViewItem * php_wxDataViewItem_fetch_object(zend_object *obj) {
    return (zo_wxDataViewItem *)(
        (char *)(obj) - XtOffsetOf(zo_wxDataViewItem, zo)
    );
}

#define Z_wxDataViewItem_P(zv) \
    php_wxDataViewItem_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxDataViewModelNotifier_entry;
extern zend_object_handlers wxphp_wxDataViewModelNotifier_object_handlers;
void php_wxDataViewModelNotifier_destruction_handler(zend_resource*);

class wxDataViewModelNotifier_php: public wxDataViewModelNotifier{
    public:

    wxDataViewModelNotifier_php():wxDataViewModelNotifier(){}
    
    bool Cleared();
    bool ItemAdded(const wxDataViewItem& parent, const wxDataViewItem& item);
    bool ItemChanged(const wxDataViewItem& item);
    bool ItemDeleted(const wxDataViewItem& parent, const wxDataViewItem& item);
    void Resort();
    bool ValueChanged(const wxDataViewItem& item, unsigned int col);
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxDataViewModelNotifier{
    wxDataViewModelNotifier_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxDataViewModelNotifier;

void php_wxDataViewModelNotifier_free(void *object);
zend_object* php_wxDataViewModelNotifier_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxDataViewModelNotifier_functions[] = {
    PHP_ME(php_wxDataViewModelNotifier, GetOwner, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewModelNotifier, SetOwner, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewModelNotifier, __construct, arginfo_void, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxDataViewModelNotifier * php_wxDataViewModelNotifier_fetch_object(zend_object *obj) {
    return (zo_wxDataViewModelNotifier *)(
        (char *)(obj) - XtOffsetOf(zo_wxDataViewModelNotifier, zo)
    );
}

#define Z_wxDataViewModelNotifier_P(zv) \
    php_wxDataViewModelNotifier_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxDataViewRenderer_entry;
extern zend_object_handlers wxphp_wxDataViewRenderer_object_handlers;
void php_wxDataViewRenderer_destruction_handler(zend_resource*);

class wxDataViewRenderer_php: public wxDataViewRenderer{
    public:

    
    bool GetValue(wxVariant& value) const;
    bool SetValue(const wxVariant& value);
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxDataViewRenderer{
    wxDataViewRenderer_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxDataViewRenderer;

void php_wxDataViewRenderer_free(void *object);
zend_object* php_wxDataViewRenderer_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxDataViewRenderer_functions[] = {
    PHP_ME(php_wxDataViewRenderer, EnableEllipsize, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewRenderer, DisableEllipsize, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewRenderer, GetAlignment, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewRenderer, GetEllipsizeMode, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewRenderer, GetMode, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewRenderer, GetOwner, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewRenderer, GetVariantType, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewRenderer, SetAlignment, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewRenderer, SetOwner, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewRenderer, Validate, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_FE_END
};
#endif


static inline zo_wxDataViewRenderer * php_wxDataViewRenderer_fetch_object(zend_object *obj) {
    return (zo_wxDataViewRenderer *)(
        (char *)(obj) - XtOffsetOf(zo_wxDataViewRenderer, zo)
    );
}

#define Z_wxDataViewRenderer_P(zv) \
    php_wxDataViewRenderer_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxDataViewTextRenderer_entry;
extern zend_object_handlers wxphp_wxDataViewTextRenderer_object_handlers;
void php_wxDataViewTextRenderer_destruction_handler(zend_resource*);

class wxDataViewTextRenderer_php: public wxDataViewTextRenderer{
    public:

    wxDataViewTextRenderer_php(const wxString& varianttype="string", wxDataViewCellMode mode=wxDATAVIEW_CELL_INERT, int align=wxDVR_DEFAULT_ALIGNMENT):wxDataViewTextRenderer(varianttype, mode, align){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxDataViewTextRenderer{
    wxDataViewTextRenderer_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxDataViewTextRenderer;

void php_wxDataViewTextRenderer_free(void *object);
zend_object* php_wxDataViewTextRenderer_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxDataViewTextRenderer_functions[] = {
    PHP_ME(php_wxDataViewTextRenderer, __construct, arginfo_void, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxDataViewTextRenderer * php_wxDataViewTextRenderer_fetch_object(zend_object *obj) {
    return (zo_wxDataViewTextRenderer *)(
        (char *)(obj) - XtOffsetOf(zo_wxDataViewTextRenderer, zo)
    );
}

#define Z_wxDataViewTextRenderer_P(zv) \
    php_wxDataViewTextRenderer_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxDataViewIconTextRenderer_entry;
extern zend_object_handlers wxphp_wxDataViewIconTextRenderer_object_handlers;
void php_wxDataViewIconTextRenderer_destruction_handler(zend_resource*);

class wxDataViewIconTextRenderer_php: public wxDataViewIconTextRenderer{
    public:

    wxDataViewIconTextRenderer_php(const wxString& varianttype="wxDataViewIconText", wxDataViewCellMode mode=wxDATAVIEW_CELL_INERT, int align=wxDVR_DEFAULT_ALIGNMENT):wxDataViewIconTextRenderer(varianttype, mode, align){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxDataViewIconTextRenderer{
    wxDataViewIconTextRenderer_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxDataViewIconTextRenderer;

void php_wxDataViewIconTextRenderer_free(void *object);
zend_object* php_wxDataViewIconTextRenderer_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxDataViewIconTextRenderer_functions[] = {
    PHP_ME(php_wxDataViewIconTextRenderer, __construct, arginfo_void, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxDataViewIconTextRenderer * php_wxDataViewIconTextRenderer_fetch_object(zend_object *obj) {
    return (zo_wxDataViewIconTextRenderer *)(
        (char *)(obj) - XtOffsetOf(zo_wxDataViewIconTextRenderer, zo)
    );
}

#define Z_wxDataViewIconTextRenderer_P(zv) \
    php_wxDataViewIconTextRenderer_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxDataViewProgressRenderer_entry;
extern zend_object_handlers wxphp_wxDataViewProgressRenderer_object_handlers;
void php_wxDataViewProgressRenderer_destruction_handler(zend_resource*);

class wxDataViewProgressRenderer_php: public wxDataViewProgressRenderer{
    public:

    wxDataViewProgressRenderer_php(const wxString& label=wxEmptyString, const wxString& varianttype="long", wxDataViewCellMode mode=wxDATAVIEW_CELL_INERT, int align=wxDVR_DEFAULT_ALIGNMENT):wxDataViewProgressRenderer(label, varianttype, mode, align){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxDataViewProgressRenderer{
    wxDataViewProgressRenderer_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxDataViewProgressRenderer;

void php_wxDataViewProgressRenderer_free(void *object);
zend_object* php_wxDataViewProgressRenderer_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxDataViewProgressRenderer_functions[] = {
    PHP_ME(php_wxDataViewProgressRenderer, __construct, arginfo_void, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxDataViewProgressRenderer * php_wxDataViewProgressRenderer_fetch_object(zend_object *obj) {
    return (zo_wxDataViewProgressRenderer *)(
        (char *)(obj) - XtOffsetOf(zo_wxDataViewProgressRenderer, zo)
    );
}

#define Z_wxDataViewProgressRenderer_P(zv) \
    php_wxDataViewProgressRenderer_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxDataViewSpinRenderer_entry;
extern zend_object_handlers wxphp_wxDataViewSpinRenderer_object_handlers;
void php_wxDataViewSpinRenderer_destruction_handler(zend_resource*);

class wxDataViewSpinRenderer_php: public wxDataViewSpinRenderer{
    public:

    wxDataViewSpinRenderer_php(int min, int max, wxDataViewCellMode mode=wxDATAVIEW_CELL_EDITABLE, int align=wxDVR_DEFAULT_ALIGNMENT):wxDataViewSpinRenderer(min, max, mode, align){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxDataViewSpinRenderer{
    wxDataViewSpinRenderer_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxDataViewSpinRenderer;

void php_wxDataViewSpinRenderer_free(void *object);
zend_object* php_wxDataViewSpinRenderer_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxDataViewSpinRenderer_functions[] = {
    PHP_ME(php_wxDataViewSpinRenderer, __construct, arginfo_void, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxDataViewSpinRenderer * php_wxDataViewSpinRenderer_fetch_object(zend_object *obj) {
    return (zo_wxDataViewSpinRenderer *)(
        (char *)(obj) - XtOffsetOf(zo_wxDataViewSpinRenderer, zo)
    );
}

#define Z_wxDataViewSpinRenderer_P(zv) \
    php_wxDataViewSpinRenderer_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxDataViewToggleRenderer_entry;
extern zend_object_handlers wxphp_wxDataViewToggleRenderer_object_handlers;
void php_wxDataViewToggleRenderer_destruction_handler(zend_resource*);

class wxDataViewToggleRenderer_php: public wxDataViewToggleRenderer{
    public:

    wxDataViewToggleRenderer_php(const wxString& varianttype="bool", wxDataViewCellMode mode=wxDATAVIEW_CELL_INERT, int align=wxDVR_DEFAULT_ALIGNMENT):wxDataViewToggleRenderer(varianttype, mode, align){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxDataViewToggleRenderer{
    wxDataViewToggleRenderer_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxDataViewToggleRenderer;

void php_wxDataViewToggleRenderer_free(void *object);
zend_object* php_wxDataViewToggleRenderer_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxDataViewToggleRenderer_functions[] = {
    PHP_ME(php_wxDataViewToggleRenderer, __construct, arginfo_void, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxDataViewToggleRenderer * php_wxDataViewToggleRenderer_fetch_object(zend_object *obj) {
    return (zo_wxDataViewToggleRenderer *)(
        (char *)(obj) - XtOffsetOf(zo_wxDataViewToggleRenderer, zo)
    );
}

#define Z_wxDataViewToggleRenderer_P(zv) \
    php_wxDataViewToggleRenderer_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxDataViewDateRenderer_entry;
extern zend_object_handlers wxphp_wxDataViewDateRenderer_object_handlers;
void php_wxDataViewDateRenderer_destruction_handler(zend_resource*);

class wxDataViewDateRenderer_php: public wxDataViewDateRenderer{
    public:

    wxDataViewDateRenderer_php(const wxString& varianttype="datetime", wxDataViewCellMode mode=wxDATAVIEW_CELL_ACTIVATABLE, int align=wxDVR_DEFAULT_ALIGNMENT):wxDataViewDateRenderer(varianttype, mode, align){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxDataViewDateRenderer{
    wxDataViewDateRenderer_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxDataViewDateRenderer;

void php_wxDataViewDateRenderer_free(void *object);
zend_object* php_wxDataViewDateRenderer_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxDataViewDateRenderer_functions[] = {
    PHP_ME(php_wxDataViewDateRenderer, __construct, arginfo_void, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxDataViewDateRenderer * php_wxDataViewDateRenderer_fetch_object(zend_object *obj) {
    return (zo_wxDataViewDateRenderer *)(
        (char *)(obj) - XtOffsetOf(zo_wxDataViewDateRenderer, zo)
    );
}

#define Z_wxDataViewDateRenderer_P(zv) \
    php_wxDataViewDateRenderer_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxDataViewCustomRenderer_entry;
extern zend_object_handlers wxphp_wxDataViewCustomRenderer_object_handlers;
void php_wxDataViewCustomRenderer_destruction_handler(zend_resource*);

class wxDataViewCustomRenderer_php: public wxDataViewCustomRenderer{
    public:

    
    wxSize GetSize() const;
    bool Render(wxRect cell, wxDC* dc, int state);
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxDataViewCustomRenderer{
    wxDataViewCustomRenderer_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxDataViewCustomRenderer;

void php_wxDataViewCustomRenderer_free(void *object);
zend_object* php_wxDataViewCustomRenderer_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxDataViewCustomRenderer_functions[] = {
    PHP_ME(php_wxDataViewCustomRenderer, ActivateCell, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewCustomRenderer, CreateEditorCtrl, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewCustomRenderer, GetAttr, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewCustomRenderer, GetValueFromEditorCtrl, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewCustomRenderer, HasEditorCtrl, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewCustomRenderer, RenderText, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewCustomRenderer, StartDrag, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_FE_END
};
#endif


static inline zo_wxDataViewCustomRenderer * php_wxDataViewCustomRenderer_fetch_object(zend_object *obj) {
    return (zo_wxDataViewCustomRenderer *)(
        (char *)(obj) - XtOffsetOf(zo_wxDataViewCustomRenderer, zo)
    );
}

#define Z_wxDataViewCustomRenderer_P(zv) \
    php_wxDataViewCustomRenderer_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxDataViewBitmapRenderer_entry;
extern zend_object_handlers wxphp_wxDataViewBitmapRenderer_object_handlers;
void php_wxDataViewBitmapRenderer_destruction_handler(zend_resource*);

class wxDataViewBitmapRenderer_php: public wxDataViewBitmapRenderer{
    public:

    wxDataViewBitmapRenderer_php(const wxString& varianttype="wxBitmap", wxDataViewCellMode mode=wxDATAVIEW_CELL_INERT, int align=wxDVR_DEFAULT_ALIGNMENT):wxDataViewBitmapRenderer(varianttype, mode, align){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxDataViewBitmapRenderer{
    wxDataViewBitmapRenderer_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxDataViewBitmapRenderer;

void php_wxDataViewBitmapRenderer_free(void *object);
zend_object* php_wxDataViewBitmapRenderer_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxDataViewBitmapRenderer_functions[] = {
    PHP_ME(php_wxDataViewBitmapRenderer, __construct, arginfo_void, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxDataViewBitmapRenderer * php_wxDataViewBitmapRenderer_fetch_object(zend_object *obj) {
    return (zo_wxDataViewBitmapRenderer *)(
        (char *)(obj) - XtOffsetOf(zo_wxDataViewBitmapRenderer, zo)
    );
}

#define Z_wxDataViewBitmapRenderer_P(zv) \
    php_wxDataViewBitmapRenderer_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxDataViewColumn_entry;
extern zend_object_handlers wxphp_wxDataViewColumn_object_handlers;
void php_wxDataViewColumn_destruction_handler(zend_resource*);

class wxDataViewColumn_php: public wxDataViewColumn{
    public:

    wxDataViewColumn_php(const wxString& title, wxDataViewRenderer* renderer, unsigned int model_column, int width=wxDVC_DEFAULT_WIDTH, wxAlignment align=wxALIGN_CENTER, int flags=wxDATAVIEW_COL_RESIZABLE):wxDataViewColumn(title, renderer, model_column, width, align, flags){}
    wxDataViewColumn_php(const wxBitmap& bitmap, wxDataViewRenderer* renderer, unsigned int model_column, int width=wxDVC_DEFAULT_WIDTH, wxAlignment align=wxALIGN_CENTER, int flags=wxDATAVIEW_COL_RESIZABLE):wxDataViewColumn(bitmap, renderer, model_column, width, align, flags){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxDataViewColumn{
    wxDataViewColumn_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxDataViewColumn;

void php_wxDataViewColumn_free(void *object);
zend_object* php_wxDataViewColumn_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxDataViewColumn_functions[] = {
    PHP_ME(php_wxDataViewColumn, GetModelColumn, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewColumn, GetOwner, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewColumn, __construct, arginfo_void, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_ME(php_wxDataViewColumn, GetRenderer, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_FE_END
};
#endif


static inline zo_wxDataViewColumn * php_wxDataViewColumn_fetch_object(zend_object *obj) {
    return (zo_wxDataViewColumn *)(
        (char *)(obj) - XtOffsetOf(zo_wxDataViewColumn, zo)
    );
}

#define Z_wxDataViewColumn_P(zv) \
    php_wxDataViewColumn_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxDataViewListStore_entry;
extern zend_object_handlers wxphp_wxDataViewListStore_object_handlers;
void php_wxDataViewListStore_destruction_handler(zend_resource*);

class wxDataViewListStore_php: public wxDataViewListStore{
    public:

    wxDataViewListStore_php():wxDataViewListStore(){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxDataViewListStore{
    wxDataViewListStore_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxDataViewListStore;

void php_wxDataViewListStore_free(void *object);
zend_object* php_wxDataViewListStore_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxDataViewListStore_functions[] = {
    PHP_ME(php_wxDataViewListStore, AppendColumn, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewListStore, DeleteAllItems, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewListStore, DeleteItem, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewListStore, GetColumnCount, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewListStore, GetColumnType, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewListStore, GetValueByRow, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewListStore, InsertColumn, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewListStore, PrependColumn, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewListStore, SetValueByRow, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewListStore, __construct, arginfo_void, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxDataViewListStore * php_wxDataViewListStore_fetch_object(zend_object *obj) {
    return (zo_wxDataViewListStore *)(
        (char *)(obj) - XtOffsetOf(zo_wxDataViewListStore, zo)
    );
}

#define Z_wxDataViewListStore_P(zv) \
    php_wxDataViewListStore_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxDataViewTreeStore_entry;
extern zend_object_handlers wxphp_wxDataViewTreeStore_object_handlers;
void php_wxDataViewTreeStore_destruction_handler(zend_resource*);

class wxDataViewTreeStore_php: public wxDataViewTreeStore{
    public:

    wxDataViewTreeStore_php():wxDataViewTreeStore(){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxDataViewTreeStore{
    wxDataViewTreeStore_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxDataViewTreeStore;

void php_wxDataViewTreeStore_free(void *object);
zend_object* php_wxDataViewTreeStore_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxDataViewTreeStore_functions[] = {
    PHP_ME(php_wxDataViewTreeStore, AppendContainer, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewTreeStore, AppendItem, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewTreeStore, DeleteAllItems, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewTreeStore, DeleteChildren, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewTreeStore, DeleteItem, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewTreeStore, GetChildCount, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewTreeStore, GetItemData, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewTreeStore, GetItemExpandedIcon, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewTreeStore, GetItemIcon, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewTreeStore, GetItemText, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewTreeStore, GetNthChild, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewTreeStore, InsertContainer, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewTreeStore, InsertItem, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewTreeStore, PrependContainer, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewTreeStore, PrependItem, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewTreeStore, SetItemData, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewTreeStore, SetItemExpandedIcon, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewTreeStore, SetItemIcon, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewTreeStore, __construct, arginfo_void, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxDataViewTreeStore * php_wxDataViewTreeStore_fetch_object(zend_object *obj) {
    return (zo_wxDataViewTreeStore *)(
        (char *)(obj) - XtOffsetOf(zo_wxDataViewTreeStore, zo)
    );
}

#define Z_wxDataViewTreeStore_P(zv) \
    php_wxDataViewTreeStore_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxDataViewIconText_entry;
extern zend_object_handlers wxphp_wxDataViewIconText_object_handlers;
void php_wxDataViewIconText_destruction_handler(zend_resource*);

class wxDataViewIconText_php: public wxDataViewIconText{
    public:

    wxDataViewIconText_php(const wxString& text=wxEmptyString, const wxIcon& icon=wxNullIcon):wxDataViewIconText(text, icon){}
    wxDataViewIconText_php(const wxDataViewIconText& other):wxDataViewIconText(other){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxDataViewIconText{
    wxDataViewIconText_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxDataViewIconText;

void php_wxDataViewIconText_free(void *object);
zend_object* php_wxDataViewIconText_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxDataViewIconText_functions[] = {
    PHP_ME(php_wxDataViewIconText, GetIcon, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewIconText, GetText, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewIconText, SetIcon, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewIconText, SetText, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewIconText, __construct, arginfo_void, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxDataViewIconText * php_wxDataViewIconText_fetch_object(zend_object *obj) {
    return (zo_wxDataViewIconText *)(
        (char *)(obj) - XtOffsetOf(zo_wxDataViewIconText, zo)
    );
}

#define Z_wxDataViewIconText_P(zv) \
    php_wxDataViewIconText_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxDataViewEvent_entry;
extern zend_object_handlers wxphp_wxDataViewEvent_object_handlers;
void php_wxDataViewEvent_destruction_handler(zend_resource*);

class wxDataViewEvent_php: public wxDataViewEvent{
    public:

    wxDataViewEvent_php(wxEventType commandType=wxEVT_NULL, int winid=0):wxDataViewEvent(commandType, winid){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxDataViewEvent{
    wxDataViewEvent_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxDataViewEvent;

void php_wxDataViewEvent_free(void *object);
zend_object* php_wxDataViewEvent_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxDataViewEvent_functions[] = {
    PHP_ME(php_wxDataViewEvent, GetItem, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewEvent, SetItem, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewEvent, GetCacheFrom, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewEvent, GetCacheTo, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewEvent, GetColumn, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewEvent, GetDataBuffer, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewEvent, GetDataFormat, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewEvent, GetDataSize, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewEvent, GetDataViewColumn, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewEvent, GetModel, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewEvent, GetPosition, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewEvent, GetValue, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewEvent, IsEditCancelled, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewEvent, SetColumn, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewEvent, SetDataObject, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewEvent, SetDataViewColumn, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewEvent, SetModel, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewEvent, SetValue, arginfo_void, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDataViewEvent, __construct, arginfo_void, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxDataViewEvent * php_wxDataViewEvent_fetch_object(zend_object *obj) {
    return (zo_wxDataViewEvent *)(
        (char *)(obj) - XtOffsetOf(zo_wxDataViewEvent, zo)
    );
}

#define Z_wxDataViewEvent_P(zv) \
    php_wxDataViewEvent_fetch_object(Z_OBJ_P(zv))
#endif //WXPHP_DVC_H_GUARD
