/*
 * @author Mário Soares
 * @contributors Jefferson González
 * @contributors René Vögeli / Rangee GmbH
 * 
 * @license 
 * This file is part of wxPHP check the LICENSE file for information.
 * 
 * @note
 * This file was auto-generated by the wxPHP source maker
*/

#ifndef WXPHP_MISC_H_GUARD
#define WXPHP_MISC_H_GUARD

#include "references.h"
#include "object_types.h"

ZEND_BEGIN_ARG_INFO_EX(wxphp_misc_get_args, 0, 0, 1)
    ZEND_ARG_INFO(0, name)
ZEND_END_ARG_INFO()

extern zend_class_entry* php_wxArtProvider_entry;
extern zend_object_handlers wxphp_wxArtProvider_object_handlers;
void php_wxArtProvider_destruction_handler(zend_resource*);

class wxArtProvider_php: public wxArtProvider{
    public:

    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxArtProvider{
    wxArtProvider_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxArtProvider;

void php_wxArtProvider_free(void *object);
zend_object* php_wxArtProvider_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
ZEND_BEGIN_ARG_INFO_EX(php_wxArtProvider_Remove_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, provider)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxArtProvider_PushBack_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, provider)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxArtProvider_Push_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, provider)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxArtProvider_Pop_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxArtProvider_HasNativeProvider_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxArtProvider_GetSizeHint_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, client)
    ZEND_ARG_INFO(0, platform_default)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxArtProvider_GetNativeSizeHint_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, client)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxArtProvider_GetIconBundle_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, id)
    ZEND_ARG_INFO(0, client)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxArtProvider_GetIcon_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, id)
    ZEND_ARG_INFO(0, client)
    ZEND_ARG_INFO(0, size)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxArtProvider_GetBitmap_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, id)
    ZEND_ARG_INFO(0, client)
    ZEND_ARG_INFO(0, size)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxArtProvider_Delete_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, provider)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxArtProvider___construct_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, other)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxArtProvider_UnShare_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxArtProvider_UnRef_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxArtProvider_IsSameAs_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, obj)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxArtProvider_Ref_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, clone)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxArtProvider_GetClassInfo_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxArtProvider_IsKindOf_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, info)
ZEND_END_ARG_INFO()

static zend_function_entry php_wxArtProvider_functions[] = {
    PHP_ME(php_wxArtProvider, Remove, php_wxArtProvider_Remove_arg_infos, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
    PHP_ME(php_wxArtProvider, PushBack, php_wxArtProvider_PushBack_arg_infos, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
    PHP_ME(php_wxArtProvider, Push, php_wxArtProvider_Push_arg_infos, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
    PHP_ME(php_wxArtProvider, Pop, php_wxArtProvider_Pop_arg_infos, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
    PHP_ME(php_wxArtProvider, HasNativeProvider, php_wxArtProvider_HasNativeProvider_arg_infos, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
    PHP_ME(php_wxArtProvider, GetSizeHint, php_wxArtProvider_GetSizeHint_arg_infos, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
    PHP_ME(php_wxArtProvider, GetNativeSizeHint, php_wxArtProvider_GetNativeSizeHint_arg_infos, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
    PHP_ME(php_wxArtProvider, GetIconBundle, php_wxArtProvider_GetIconBundle_arg_infos, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
    PHP_ME(php_wxArtProvider, GetIcon, php_wxArtProvider_GetIcon_arg_infos, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
    PHP_ME(php_wxArtProvider, GetBitmap, php_wxArtProvider_GetBitmap_arg_infos, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
    PHP_ME(php_wxArtProvider, Delete, php_wxArtProvider_Delete_arg_infos, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
    PHP_FE_END
};
#endif


static inline zo_wxArtProvider * php_wxArtProvider_fetch_object(zend_object *obj) {
    return (zo_wxArtProvider *)(
        (char *)(obj) - XtOffsetOf(zo_wxArtProvider, zo)
    );
}

#define Z_wxArtProvider_P(zv) \
    php_wxArtProvider_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxCaret_entry;
extern zend_object_handlers wxphp_wxCaret_object_handlers;
void php_wxCaret_destruction_handler(zend_resource*);

class wxCaret_php: public wxCaret{
    public:

    wxCaret_php():wxCaret(){}
    wxCaret_php(wxWindow* window, int width, int height):wxCaret(window, width, height){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxCaret{
    wxCaret_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxCaret;

void php_wxCaret_free(void *object);
zend_object* php_wxCaret_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
ZEND_BEGIN_ARG_INFO_EX(php_wxCaret___construct_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, window)
    ZEND_ARG_INFO(0, width)
    ZEND_ARG_INFO(0, height)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxCaret_Show_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, show)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxCaret_SetSize_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, width)
    ZEND_ARG_INFO(0, height)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxCaret_SetBlinkTime_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, milliseconds)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxCaret_Move_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, x)
    ZEND_ARG_INFO(0, y)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxCaret_IsVisible_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxCaret_IsOk_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxCaret_Hide_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxCaret_GetWindow_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxCaret_GetSize_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, width)
    ZEND_ARG_INFO(0, height)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxCaret_GetBlinkTime_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxCaret_GetPosition_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, x)
    ZEND_ARG_INFO(0, y)
ZEND_END_ARG_INFO()

static zend_function_entry php_wxCaret_functions[] = {
    PHP_ME(php_wxCaret, __construct, php_wxCaret___construct_arg_infos, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_ME(php_wxCaret, Show, php_wxCaret_Show_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxCaret, SetSize, php_wxCaret_SetSize_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxCaret, SetBlinkTime, php_wxCaret_SetBlinkTime_arg_infos, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
    PHP_ME(php_wxCaret, Move, php_wxCaret_Move_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxCaret, IsVisible, php_wxCaret_IsVisible_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxCaret, IsOk, php_wxCaret_IsOk_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxCaret, Hide, php_wxCaret_Hide_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxCaret, GetWindow, php_wxCaret_GetWindow_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxCaret, GetSize, php_wxCaret_GetSize_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxCaret, GetBlinkTime, php_wxCaret_GetBlinkTime_arg_infos, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
    PHP_ME(php_wxCaret, GetPosition, php_wxCaret_GetPosition_arg_infos, ZEND_ACC_PUBLIC)
    PHP_FE_END
};
#endif


static inline zo_wxCaret * php_wxCaret_fetch_object(zend_object *obj) {
    return (zo_wxCaret *)(
        (char *)(obj) - XtOffsetOf(zo_wxCaret, zo)
    );
}

#define Z_wxCaret_P(zv) \
    php_wxCaret_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxNotificationMessage_entry;
extern zend_object_handlers wxphp_wxNotificationMessage_object_handlers;
void php_wxNotificationMessage_destruction_handler(zend_resource*);

class wxNotificationMessage_php: public wxNotificationMessage{
    public:

    wxNotificationMessage_php():wxNotificationMessage(){}
    wxNotificationMessage_php(const wxString& title, const wxString& message=wxEmptyString, wxWindow* parent=NULL, int flags=wxICON_INFORMATION):wxNotificationMessage(title, message, parent, flags){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxNotificationMessage{
    wxNotificationMessage_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxNotificationMessage;

void php_wxNotificationMessage_free(void *object);
zend_object* php_wxNotificationMessage_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
ZEND_BEGIN_ARG_INFO_EX(php_wxNotificationMessage_Close_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxNotificationMessage_SetFlags_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, flags)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxNotificationMessage_SetMessage_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, message)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxNotificationMessage_SetParent_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, parent)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxNotificationMessage_SetTitle_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, title)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxNotificationMessage_Show_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, timeout)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxNotificationMessage___construct_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, title)
    ZEND_ARG_INFO(0, message)
    ZEND_ARG_INFO(0, parent)
    ZEND_ARG_INFO(0, flags)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxNotificationMessage_Connect_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, id)
    ZEND_ARG_INFO(0, lastId)
    ZEND_ARG_INFO(0, eventType)
    ZEND_ARG_INFO(0, function)
    ZEND_ARG_INFO(0, userData)
    ZEND_ARG_INFO(0, eventSink)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxNotificationMessage_Disconnect_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, id)
    ZEND_ARG_INFO(0, lastId)
    ZEND_ARG_INFO(0, eventType)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxNotificationMessage_AddFilter_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, filter)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxNotificationMessage_AddPendingEvent_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, event)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxNotificationMessage_DeletePendingEvents_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxNotificationMessage_GetEvtHandlerEnabled_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxNotificationMessage_GetNextHandler_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxNotificationMessage_GetPreviousHandler_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxNotificationMessage_IsUnlinked_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxNotificationMessage_ProcessEvent_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, event)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxNotificationMessage_ProcessEventLocally_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, event)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxNotificationMessage_ProcessPendingEvents_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxNotificationMessage_QueueEvent_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, event)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxNotificationMessage_RemoveFilter_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, filter)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxNotificationMessage_SafelyProcessEvent_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, event)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxNotificationMessage_SetEvtHandlerEnabled_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, enabled)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxNotificationMessage_SetNextHandler_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, handler)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxNotificationMessage_SetPreviousHandler_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, handler)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxNotificationMessage_Unlink_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxNotificationMessage_UnShare_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxNotificationMessage_UnRef_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxNotificationMessage_IsSameAs_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, obj)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxNotificationMessage_Ref_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, clone)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxNotificationMessage_GetClassInfo_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxNotificationMessage_IsKindOf_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, info)
ZEND_END_ARG_INFO()

static zend_function_entry php_wxNotificationMessage_functions[] = {
    PHP_ME(php_wxNotificationMessage, Close, php_wxNotificationMessage_Close_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxNotificationMessage, SetFlags, php_wxNotificationMessage_SetFlags_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxNotificationMessage, SetMessage, php_wxNotificationMessage_SetMessage_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxNotificationMessage, SetParent, php_wxNotificationMessage_SetParent_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxNotificationMessage, SetTitle, php_wxNotificationMessage_SetTitle_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxNotificationMessage, Show, php_wxNotificationMessage_Show_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxNotificationMessage, __construct, php_wxNotificationMessage___construct_arg_infos, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxNotificationMessage * php_wxNotificationMessage_fetch_object(zend_object *obj) {
    return (zo_wxNotificationMessage *)(
        (char *)(obj) - XtOffsetOf(zo_wxNotificationMessage, zo)
    );
}

#define Z_wxNotificationMessage_P(zv) \
    php_wxNotificationMessage_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxStopWatch_entry;
extern zend_object_handlers wxphp_wxStopWatch_object_handlers;
void php_wxStopWatch_destruction_handler(zend_resource*);

class wxStopWatch_php: public wxStopWatch{
    public:

    wxStopWatch_php():wxStopWatch(){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxStopWatch{
    wxStopWatch_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxStopWatch;

void php_wxStopWatch_free(void *object);
zend_object* php_wxStopWatch_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
ZEND_BEGIN_ARG_INFO_EX(php_wxStopWatch___construct_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxStopWatch_Time_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxStopWatch_Start_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, milliseconds)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxStopWatch_Resume_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxStopWatch_Pause_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()

static zend_function_entry php_wxStopWatch_functions[] = {
    PHP_ME(php_wxStopWatch, __construct, php_wxStopWatch___construct_arg_infos, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_ME(php_wxStopWatch, Time, php_wxStopWatch_Time_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxStopWatch, Start, php_wxStopWatch_Start_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxStopWatch, Resume, php_wxStopWatch_Resume_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxStopWatch, Pause, php_wxStopWatch_Pause_arg_infos, ZEND_ACC_PUBLIC)
    PHP_FE_END
};
#endif


static inline zo_wxStopWatch * php_wxStopWatch_fetch_object(zend_object *obj) {
    return (zo_wxStopWatch *)(
        (char *)(obj) - XtOffsetOf(zo_wxStopWatch, zo)
    );
}

#define Z_wxStopWatch_P(zv) \
    php_wxStopWatch_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxTaskBarIcon_entry;
extern zend_object_handlers wxphp_wxTaskBarIcon_object_handlers;
void php_wxTaskBarIcon_destruction_handler(zend_resource*);

class wxTaskBarIcon_php: public wxTaskBarIcon{
    public:

    wxTaskBarIcon_php(wxTaskBarIconType iconType=wxTBI_DEFAULT_TYPE):wxTaskBarIcon(iconType){}
    
    wxMenu* CreatePopupMenu();
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxTaskBarIcon{
    wxTaskBarIcon_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxTaskBarIcon;

void php_wxTaskBarIcon_free(void *object);
zend_object* php_wxTaskBarIcon_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
ZEND_BEGIN_ARG_INFO_EX(php_wxTaskBarIcon_Destroy_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxTaskBarIcon_IsAvailable_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxTaskBarIcon_IsIconInstalled_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxTaskBarIcon_IsOk_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxTaskBarIcon_PopupMenu_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, menu)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxTaskBarIcon_RemoveIcon_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxTaskBarIcon_SetIcon_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, icon)
    ZEND_ARG_INFO(0, tooltip)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxTaskBarIcon___construct_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, iconType)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxTaskBarIcon_Connect_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, id)
    ZEND_ARG_INFO(0, lastId)
    ZEND_ARG_INFO(0, eventType)
    ZEND_ARG_INFO(0, function)
    ZEND_ARG_INFO(0, userData)
    ZEND_ARG_INFO(0, eventSink)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxTaskBarIcon_Disconnect_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, id)
    ZEND_ARG_INFO(0, lastId)
    ZEND_ARG_INFO(0, eventType)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxTaskBarIcon_AddFilter_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, filter)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxTaskBarIcon_AddPendingEvent_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, event)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxTaskBarIcon_DeletePendingEvents_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxTaskBarIcon_GetEvtHandlerEnabled_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxTaskBarIcon_GetNextHandler_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxTaskBarIcon_GetPreviousHandler_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxTaskBarIcon_IsUnlinked_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxTaskBarIcon_ProcessEvent_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, event)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxTaskBarIcon_ProcessEventLocally_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, event)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxTaskBarIcon_ProcessPendingEvents_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxTaskBarIcon_QueueEvent_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, event)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxTaskBarIcon_RemoveFilter_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, filter)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxTaskBarIcon_SafelyProcessEvent_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, event)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxTaskBarIcon_SetEvtHandlerEnabled_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, enabled)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxTaskBarIcon_SetNextHandler_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, handler)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxTaskBarIcon_SetPreviousHandler_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, handler)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxTaskBarIcon_Unlink_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxTaskBarIcon_UnShare_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxTaskBarIcon_UnRef_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxTaskBarIcon_IsSameAs_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, obj)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxTaskBarIcon_Ref_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, clone)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxTaskBarIcon_GetClassInfo_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxTaskBarIcon_IsKindOf_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, info)
ZEND_END_ARG_INFO()

static zend_function_entry php_wxTaskBarIcon_functions[] = {
    PHP_ME(php_wxTaskBarIcon, Destroy, php_wxTaskBarIcon_Destroy_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxTaskBarIcon, IsAvailable, php_wxTaskBarIcon_IsAvailable_arg_infos, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
    PHP_ME(php_wxTaskBarIcon, IsIconInstalled, php_wxTaskBarIcon_IsIconInstalled_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxTaskBarIcon, IsOk, php_wxTaskBarIcon_IsOk_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxTaskBarIcon, PopupMenu, php_wxTaskBarIcon_PopupMenu_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxTaskBarIcon, RemoveIcon, php_wxTaskBarIcon_RemoveIcon_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxTaskBarIcon, SetIcon, php_wxTaskBarIcon_SetIcon_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxTaskBarIcon, __construct, php_wxTaskBarIcon___construct_arg_infos, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxTaskBarIcon * php_wxTaskBarIcon_fetch_object(zend_object *obj) {
    return (zo_wxTaskBarIcon *)(
        (char *)(obj) - XtOffsetOf(zo_wxTaskBarIcon, zo)
    );
}

#define Z_wxTaskBarIcon_P(zv) \
    php_wxTaskBarIcon_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxTimer_entry;
extern zend_object_handlers wxphp_wxTimer_object_handlers;
void php_wxTimer_destruction_handler(zend_resource*);

class wxTimer_php: public wxTimer{
    public:

    wxTimer_php():wxTimer(){}
    wxTimer_php(wxEvtHandler* owner, int id=-1):wxTimer(owner, id){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxTimer{
    wxTimer_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxTimer;

void php_wxTimer_free(void *object);
zend_object* php_wxTimer_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
ZEND_BEGIN_ARG_INFO_EX(php_wxTimer_GetId_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxTimer_GetInterval_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxTimer_GetOwner_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxTimer_IsOneShot_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxTimer_IsRunning_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxTimer_Notify_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxTimer_SetOwner_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, owner)
    ZEND_ARG_INFO(0, id)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxTimer_Start_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, milliseconds)
    ZEND_ARG_INFO(0, oneShot)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxTimer_Stop_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxTimer___construct_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, owner)
    ZEND_ARG_INFO(0, id)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxTimer_Connect_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, id)
    ZEND_ARG_INFO(0, lastId)
    ZEND_ARG_INFO(0, eventType)
    ZEND_ARG_INFO(0, function)
    ZEND_ARG_INFO(0, userData)
    ZEND_ARG_INFO(0, eventSink)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxTimer_Disconnect_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, id)
    ZEND_ARG_INFO(0, lastId)
    ZEND_ARG_INFO(0, eventType)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxTimer_AddFilter_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, filter)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxTimer_AddPendingEvent_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, event)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxTimer_DeletePendingEvents_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxTimer_GetEvtHandlerEnabled_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxTimer_GetNextHandler_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxTimer_GetPreviousHandler_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxTimer_IsUnlinked_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxTimer_ProcessEvent_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, event)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxTimer_ProcessEventLocally_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, event)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxTimer_ProcessPendingEvents_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxTimer_QueueEvent_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, event)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxTimer_RemoveFilter_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, filter)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxTimer_SafelyProcessEvent_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, event)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxTimer_SetEvtHandlerEnabled_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, enabled)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxTimer_SetNextHandler_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, handler)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxTimer_SetPreviousHandler_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, handler)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxTimer_Unlink_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxTimer_UnShare_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxTimer_UnRef_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxTimer_IsSameAs_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, obj)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxTimer_Ref_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, clone)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxTimer_GetClassInfo_arg_infos, 0, 0, 0)
ZEND_END_ARG_INFO()
ZEND_BEGIN_ARG_INFO_EX(php_wxTimer_IsKindOf_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, info)
ZEND_END_ARG_INFO()

static zend_function_entry php_wxTimer_functions[] = {
    PHP_ME(php_wxTimer, GetId, php_wxTimer_GetId_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxTimer, GetInterval, php_wxTimer_GetInterval_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxTimer, GetOwner, php_wxTimer_GetOwner_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxTimer, IsOneShot, php_wxTimer_IsOneShot_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxTimer, IsRunning, php_wxTimer_IsRunning_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxTimer, Notify, php_wxTimer_Notify_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxTimer, SetOwner, php_wxTimer_SetOwner_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxTimer, Start, php_wxTimer_Start_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxTimer, Stop, php_wxTimer_Stop_arg_infos, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxTimer, __construct, php_wxTimer___construct_arg_infos, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxTimer * php_wxTimer_fetch_object(zend_object *obj) {
    return (zo_wxTimer *)(
        (char *)(obj) - XtOffsetOf(zo_wxTimer, zo)
    );
}

#define Z_wxTimer_P(zv) \
    php_wxTimer_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxWindowDisabler_entry;
extern zend_object_handlers wxphp_wxWindowDisabler_object_handlers;
void php_wxWindowDisabler_destruction_handler(zend_resource*);

class wxWindowDisabler_php: public wxWindowDisabler{
    public:

    wxWindowDisabler_php(bool disable=true):wxWindowDisabler(disable){}
    wxWindowDisabler_php(wxWindow* winToSkip):wxWindowDisabler(winToSkip){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxWindowDisabler{
    wxWindowDisabler_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxWindowDisabler;

void php_wxWindowDisabler_free(void *object);
zend_object* php_wxWindowDisabler_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
ZEND_BEGIN_ARG_INFO_EX(php_wxWindowDisabler___construct_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, disable)
ZEND_END_ARG_INFO()

static zend_function_entry php_wxWindowDisabler_functions[] = {
    PHP_ME(php_wxWindowDisabler, __construct, php_wxWindowDisabler___construct_arg_infos, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxWindowDisabler * php_wxWindowDisabler_fetch_object(zend_object *obj) {
    return (zo_wxWindowDisabler *)(
        (char *)(obj) - XtOffsetOf(zo_wxWindowDisabler, zo)
    );
}

#define Z_wxWindowDisabler_P(zv) \
    php_wxWindowDisabler_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxBusyCursor_entry;
extern zend_object_handlers wxphp_wxBusyCursor_object_handlers;
void php_wxBusyCursor_destruction_handler(zend_resource*);

class wxBusyCursor_php: public wxBusyCursor{
    public:

    wxBusyCursor_php(const wxCursor* cursor=wxHOURGLASS_CURSOR):wxBusyCursor(cursor){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxBusyCursor{
    wxBusyCursor_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxBusyCursor;

void php_wxBusyCursor_free(void *object);
zend_object* php_wxBusyCursor_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
ZEND_BEGIN_ARG_INFO_EX(php_wxBusyCursor___construct_arg_infos, 0, 0, 0)
    ZEND_ARG_INFO(0, cursor)
ZEND_END_ARG_INFO()

static zend_function_entry php_wxBusyCursor_functions[] = {
    PHP_ME(php_wxBusyCursor, __construct, php_wxBusyCursor___construct_arg_infos, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxBusyCursor * php_wxBusyCursor_fetch_object(zend_object *obj) {
    return (zo_wxBusyCursor *)(
        (char *)(obj) - XtOffsetOf(zo_wxBusyCursor, zo)
    );
}

#define Z_wxBusyCursor_P(zv) \
    php_wxBusyCursor_fetch_object(Z_OBJ_P(zv))
#endif //WXPHP_MISC_H_GUARD
